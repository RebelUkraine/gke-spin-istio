{
  "version": 4,
  "terraform_version": "0.12.6",
  "serial": 310,
  "lineage": "58b8d710-22c1-a946-a26b-87fa46b6c80c",
  "outputs": {
    "db_password": {
      "value": "db823ddfeafa087cdeafc1f2bd930885",
      "type": "string"
    },
    "db_user_name": {
      "value": "postrges",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "complete",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "failover_certificate",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "failover_certificate_common_name",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "failover_certificate_create_time",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "failover_certificate_expiration_time",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "failover_certificate_sha1_fingerprint",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "failover_proxy_connection",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "istio_chart",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "9a051670a131050f1851ad1c4a9d100ab01946e82252e58312b8863fec01c2d8",
            "rendered": "# Top level istio values file has the following sections.\n#\n# global: This file is the authoritative and exhaustive source for the global section.\n#\n# chart sections: Every subdirectory inside the charts/ directory has a top level\n#       configuration key in this file. This file overrides the values specified\n#       by the charts\n#       Check the chart level values file for exhaustive list of configuration options.\n\n#\n# Gateways Configuration, refer to the charts/gateways/values.yaml\n# for detailed configuration\n#\ngateways:\n  enabled: true\n\n#\n# sidecar-injector webhook configuration, refer to the\n# charts/sidecarInjectorWebhook/values.yaml for detailed configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n\n#\n# galley configuration, refer to charts/galley/values.yaml\n# for detailed configuration\n#\ngalley:\n  enabled: true\n\n#\n# mixer configuration\n#\n# @see charts/mixer/values.yaml for all values\nmixer:\n  policy:\n    # if policy is enabled the global.disablePolicyChecks has affect.\n    enabled: true\n\n  telemetry:\n    enabled: true\n#\n# pilot configuration\n#\n# @see charts/pilot/values.yaml\npilot:\n  enabled: true\n\n#\n# security configuration\n#\nsecurity:\n  enabled: true\n\n#\n# nodeagent configuration\n#\nnodeagent:\n  enabled: false\n\n#\n# addon grafana configuration\n#\ngrafana:\n  enabled: true\n\n#\n# addon prometheus configuration\n#\nprometheus:\n  enabled: true\n\n#\n# addon jaeger tracing configuration\n#\ntracing:\n  enabled: true\n\n#\n# addon kiali tracing configuration\n#\nkiali:\n  enabled: false\n\n#\n# addon certmanager configuration\n#\ncertmanager:\n  enabled: false\n\n#\n# Istio CNI plugin enabled\n#   This must be enabled to use the CNI plugin in Istio.  The CNI plugin is installed separately.\n#   If true, the privileged initContainer istio-init is not needed to perform the traffic redirect\n#   settings for the istio-proxy.\n#\nistio_cni:\n  enabled: false\n\n# addon Istio CoreDNS configuration\n#\nistiocoredns:\n  enabled: false\n\n# Common settings used among istio subcharts.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io\n  hub: gcr.io/istio-release\n\n  # Default tag for Istio images.\n  tag: master-latest-daily\n\n  # Comma-separated minimum per-scope logging level of messages to output, in the form of \u003cscope\u003e:\u003clevel\u003e,\u003cscope\u003e:\u003clevel\u003e\n  # The control plane has different scopes depending on component, but can configure default log level across all components\n  # If empty, default scope and level will be used as configured in code\n  logging:\n    level: \"default:info\"\n\n  # monitoring port used by mixer, pilot, galley and sidecar injector\n  monitoringPort: 15014\n\n  k8sIngress:\n    enabled: false\n    # Gateway used for k8s Ingress resources. By default it is\n    # using 'istio:ingressgateway' that will be installed by setting\n    # 'gateways.enabled' and 'gateways.istio-ingressgateway.enabled'\n    # flags to true.\n    gatewayName: ingressgateway\n    # enableHttps will add port 443 on the ingress.\n    # It REQUIRES that the certificates are installed  in the\n    # expected secrets - enabling this option without certificates\n    # will result in LDS rejection and the ingress will not work.\n    enableHttps: false\n\n  proxy:\n    # Configuration for the proxy init container\n    init:\n      resources:\n        limits:\n          cpu: 100m\n          memory: 50Mi\n        requests:\n          cpu: 10m\n          memory: 10Mi\n    image: proxyv2\n\n    # cluster domain. Default value is \"cluster.local\".\n    clusterDomain: \"cluster.local\"\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 2000m\n        memory: 1024Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0, then start worker thread for each CPU thread/core.\n    concurrency: 2\n\n    # Configures the access log for each sidecar.\n    # Options:\n    #   \"\" - disables access log\n    #   \"/dev/stdout\" - enables access log\n    accessLogFile: \"\"\n\n    # Configure how and what fields are displayed in sidecar access log. Setting to\n    # empty string will result in default log format\n    accessLogFormat: \"\"\n\n    # Configure the access log for sidecar to JSON or TEXT.\n    accessLogEncoding: TEXT\n\n    # Configure envoy gRPC access log service.\n    envoyAccessLogService:\n      enabled: false\n      host: # example: accesslog-service.istio-system\n      port: # example: 15000\n      tlsSettings:\n        mode: DISABLE # DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL\n        clientCertificate: # example: /etc/istio/als/cert-chain.pem\n        privateKey:        # example: /etc/istio/als/key.pem\n        caCertificates:    # example: /etc/istio/als/root-cert.pem\n        sni:               # example: als.somedomain\n        subjectAltNames: []\n        # - als.somedomain\n      tcpKeepalive:\n        probes: 3\n        time: 10s\n        interval: 10s\n\n    # Log level for proxy, applies to gateways and sidecars.  If left empty, \"warning\" is used.\n    # Expected values are: trace|debug|info|warning|error|critical|off\n    logLevel: \"\"\n\n    # Per Component log level for proxy, applies to gateways and sidecars. If a component level is\n    # not set, then the global \"logLevel\" will be used. If left empty, \"misc:error\" is used.\n    componentLogLevel: \"\"\n\n    # Configure the DNS refresh rate for Envoy cluster of type STRICT_DNS\n    # This must be given it terms of seconds. For example, 300s is valid but 5m is invalid.\n    dnsRefreshRate: 300s\n\n    # Automatic protocol detection uses a set of heuristics to\n    # determine whether the connection is using TLS or not (on the\n    # server side), as well as the application protocol being used\n    # (e.g., http vs tcp). These heuristics rely on the client sending\n    # the first bits of data. For server first protocols like MySQL,\n    # MongoDB, etc., Envoy will timeout on the protocol detection after\n    # the specified period, defaulting to non mTLS plain TCP\n    # traffic. Set this field to tweak the period that Envoy will wait\n    # for the client to send the first bits of data. (MUST BE \u003e=1ms)\n    protocolDetectionTimeout: 100ms\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n\n    # Image used to enable core dumps. This is only used, when \"enableCoreDump\" is set to true.\n    enableCoreDumpImage: ubuntu:xenial\n\n    # Default port for Pilot agent health checks. A value of 0 will disable health checking.\n    statusPort: 15020\n\n    # The initial delay for readiness probes in seconds.\n    readinessInitialDelaySeconds: 1\n\n    # The period between readiness probes.\n    readinessPeriodSeconds: 2\n\n    # The number of successive failed probes before indicating readiness failure.\n    readinessFailureThreshold: 30\n\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: \"*\"\n    excludeIPRanges: \"\"\n    excludeOutboundPorts: \"\"\n\n    # pod internal interfaces\n    kubevirtInterfaces: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: \"*\"\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Disabled by default.\n    # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.\n    envoyStatsd:\n      # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      enabled: false\n      host: # example: statsd-svc.istio-system\n      port: # example: 9125\n\n    # Sets the Envoy Metrics Service address, used to push Envoy metrics to an external collector\n    # via the Metrics Service gRPC API. This contains detailed stats information emitted directly\n    # by Envoy and should not be confused with the the Istio telemetry. The Envoy stats are also\n    # available to scrape via the Envoy admin port at either /stats or /stats/prometheus.\n    #\n    # See https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/metrics/v2/metrics_service.proto\n    # for details about Envoy's Metrics Service API.\n    #\n    # Disabled by default.\n    envoyMetricsService:\n      enabled: false\n      host: # example: metrics-service.istio-system\n      port: # example: 15000\n      tlsSettings:\n        mode: DISABLE # DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL\n        clientCertificate: # example: /etc/istio/ms/cert-chain.pem\n        privateKey:        # example: /etc/istio/ms/key.pem\n        caCertificates:    # example: /etc/istio/ms/root-cert.pem\n        sni:               # example: ms.somedomain\n        subjectAltNames: []\n        # - ms.somedomain \n      tcpKeepalive:\n        probes: 3\n        time: 10s\n        interval: 10s\n\n    # Specify which tracer to use. One of: zipkin, lightstep, datadog, stackdriver.\n    # If using stackdriver tracer outside GCP, set env GOOGLE_APPLICATION_CREDENTIALS to the GCP credential file.\n    tracer: \"zipkin\"\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n\n  # controlPlaneSecurityEnabled enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n\n  # disablePolicyChecks disables mixer policy checks.\n  # if mixer.policy.enabled==true then disablePolicyChecks has affect.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: true\n\n  # policyCheckFailOpen allows traffic in cases when the mixer policy service cannot be reached.\n  # Default is false which means the traffic is denied when the client is unable to connect to Mixer.\n  policyCheckFailOpen: false\n\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n\n  # Configuration for each of the supported tracers\n  tracer:\n    # Configuration for envoy to send trace data to LightStep.\n    # Disabled by default.\n    # address: the \u003chost\u003e:\u003cport\u003e of the satellite pool\n    # accessToken: required for sending data to the pool\n    # secure: specifies whether data should be sent with TLS\n    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is\n    #   required. If a value is specified then a secret called \"lightstep.cacert\" must be created in the destination\n    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.\n    #\n    lightstep:\n      address: \"\"                # example: lightstep-satellite:443\n      accessToken: \"\"            # example: abcdefg1234567\n      secure: true               # example: true|false\n      cacertPath: \"\"             # example: /etc/lightstep/cacert.pem\n    zipkin:\n      # Host:Port for reporting trace data in zipkin format. If not specified, will default to\n      # zipkin service (port 9411) in the same namespace as the other istio components.\n      address: \"\"\n    datadog:\n      # Host:Port for submitting traces to the Datadog agent.\n      address: \"$(HOST_IP):8126\"\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n    # If set to true, and a given service does not have a corresponding DestinationRule configured,\n    # or its DestinationRule does not have TLSSettings specified, Istio configures client side\n    # TLS configuration automatically, based on the server side mTLS authentication policy and the\n    # availibity of sidecars.\n    auto: false\n\n  # Lists the secrets you need to use to pull Istio images from a private registry.\n  imagePullSecrets: []\n    # - private-registry-key\n\n  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:\n  #   0 - Never scheduled\n  #   1 - Least preferred\n  #   2 - No preference\n  #   3 - Most preferred\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n\n  # Default node selector to be applied to all deployments so that all pods can be\n  # constrained to run a particular nodes. Each component can overwrite these default\n  # values by adding its node selector block in the relevant section below and setting\n  # the desired values.\n  defaultNodeSelector: {}\n\n  # Default node tolerations to be applied to all deployments so that all pods can be\n  # scheduled to a particular nodes with matching taints. Each component can overwrite\n  # these default values by adding its tolerations block in the relevant section below\n  # and setting the desired values.\n  # Configure this field in case that all pods of Istio control plane are expected to\n  # be scheduled to particular nodes with specified taints.\n  defaultTolerations: []\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n\n  # Custom DNS config for the pod to resolve names of services in other\n  # clusters. Use this to add additional search domains, and other settings.\n  # see\n  # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config\n  # This does not apply to gateway pods as they typically need a different\n  # set of DNS settings than the normal application pods (e.g., in\n  # multicluster scenarios).\n  # NOTE: If using templates, follow the pattern in the commented example below.\n  # podDNSSearchNamespaces:\n  # - global\n  # - \"[[ valueOrDefault .DeploymentMeta.Namespace \\\"default\\\" ]].global\"\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion:\n    enabled: false\n    # If set to true, the pilot and citadel mtls and the plaintext pilot ports\n    # will be exposed on an internal gateway\n    useILB: false\n\n  multiCluster:\n    # Set to true to connect two kubernetes clusters via their respective\n    # ingressgateway services when pods in each cluster cannot directly\n    # talk to one another. All clusters should be using Istio mTLS and must\n    # have a shared root CA for this model to work.\n    enabled: false\n\n    # Should be set to the name of the cluster this installation will run in. This is required for sidecar injection\n    # to properly label proxies\n    clusterName: \"\"\n\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # enable pod distruption budget for the control plane, which is used to\n  # ensure Istio control plane components are gradually upgraded or recovered.\n  defaultPodDisruptionBudget:\n    enabled: true\n    # The values aren't mutable due to a current PodDisruptionBudget limitation\n    # minAvailable: 1\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low priority class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Use the Mesh Control Protocol (MCP) for configuring Mixer and\n  # Pilot. Requires galley (`--set galley.enabled=true`).\n  useMCP: true\n\n  # The trust domain corresponds to the trust root of a system\n  # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\n  # Indicate the domain used in SPIFFE identity URL\n  # The default depends on the environment.\n  #   kubernetes: cluster.local\n  #   else:  default dns domain\n  trustDomain: \"\"\n\n  # Mesh ID means Mesh Identifier. It should be unique within the scope where\n  # meshes will interact with each other, but it is not required to be\n  # globally/universally unique. For example, if any of the following are true,\n  # then two meshes must have different Mesh IDs:\n  # - Meshes will have their telemetry aggregated in one place\n  # - Meshes will be federated together\n  # - Policy will be written referencing one mesh from the other\n  #\n  # If an administrator expects that any of these conditions may become true in\n  # the future, they should ensure their meshes have different Mesh IDs\n  # assigned.\n  #\n  # Within a multicluster mesh, each cluster must be (manually or auto)\n  # configured to have the same Mesh ID value. If an existing cluster 'joins' a\n  # multicluster mesh, it will need to be migrated to the new mesh ID. Details\n  # of migration TBD, and it may be a disruptive operation to change the Mesh\n  # ID post-install.\n  #\n  # If the mesh admin does not specify a value, Istio will use the value of the\n  # mesh's Trust Domain. The best practice is to select a proper Trust Domain\n  # value.\n  meshID: \"\"\n\n  # Set the default behavior of the sidecar for handling outbound traffic from the application:\n  # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no\n  #   services or ServiceEntries for the destination port\n  # REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well\n  #   as those defined through ServiceEntries\n  # ALLOW_ANY is the default in 1.1.  This means each pod will be able to make outbound requests\n  # to services outside of the mesh without any ServiceEntry.\n  # REGISTRY_ONLY was the default in 1.0.  If this behavior is desired, set the value below to REGISTRY_ONLY.\n  outboundTrafficPolicy:\n    mode: ALLOW_ANY\n\n  # The namespace where globally shared configurations should be present.\n  # DestinationRules that apply to the entire mesh (e.g., enabling mTLS),\n  # default Sidecar configs, etc. should be added to this namespace.\n  # configRootNamespace: istio-config\n\n  # set the default set of namespaces to which services, service entries, virtual services, destination\n  # rules should be exported to. Currently only one value can be provided in this list. This value\n  # should be one of the following two options:\n  # * implies these objects are visible to all namespaces, enabling any sidecar to talk to any other sidecar.\n  # . implies these objects are visible to only to sidecars in the same namespace, or if imported as a Sidecar.egress.host\n  # defaultConfigVisibilitySettings:\n  #- '*'\n\n  sds:\n    # SDS enabled. IF set to true, mTLS certificates for the sidecars will be\n    # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.\n    enabled: false\n    udsPath: \"\"\n    # The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.\n    # When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the\n    # JWT is intended for the CA.\n    token:\n      aud: istio-ca\n\n  # Configure the mesh networks to be used by the Split Horizon EDS.\n  #\n  # The following example defines two networks with different endpoints association methods.\n  # For `network1` all endpoints that their IP belongs to the provided CIDR range will be\n  # mapped to network1. The gateway for this network example is specified by its public IP\n  # address and port.\n  # The second network, `network2`, in this example is defined differently with all endpoints\n  # retrieved through the specified Multi-Cluster registry being mapped to network2. The\n  # gateway is also defined differently with the name of the gateway service on the remote\n  # cluster. The public IP for the gateway will be determined from that remote service (only\n  # LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,\n  # it still need to be configured manually).\n  #\n  # meshNetworks:\n  #   network1:\n  #     endpoints:\n  #     - fromCidr: \"192.168.0.1/24\"\n  #     gateways:\n  #     - address: 1.1.1.1\n  #       port: 80\n  #   network2:\n  #     endpoints:\n  #     - fromRegistry: reg1\n  #     gateways:\n  #     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local\n  #       port: 443\n  #\n  meshNetworks: {}\n\n  # Specifies the global locality load balancing settings.\n  # Locality-weighted load balancing allows administrators to control the distribution of traffic to\n  # endpoints based on the localities of where the traffic originates and where it will terminate.\n  # Either failover or distribute configuration can be set, but not both. If neither are provided\n  # failover mode will be used.\n  #\n  # localityLbSetting:\n  #   enabled: true\n  #   distribute:\n  #   - from: \"us-central1/*\"\n  #     to:\n  #       \"us-central1/*\": 80\n  #       \"us-central2/*\": 20\n  #\n  # localityLbSetting:\n  #   enabled: true\n  #   failover:\n  #   - from: us-east\n  #     to: eu-west\n  #   - from: us-west\n  #     to: us-east\n  localityLbSetting:\n    enabled: true\n\n  # Specifies whether helm test is enabled or not.\n  # This field is set to false by default, so 'helm template ...'\n  # will ignore the helm test yaml files when generating the template\n  enableHelmTest: false\n",
            "template": "# Top level istio values file has the following sections.\n#\n# global: This file is the authoritative and exhaustive source for the global section.\n#\n# chart sections: Every subdirectory inside the charts/ directory has a top level\n#       configuration key in this file. This file overrides the values specified\n#       by the charts\n#       Check the chart level values file for exhaustive list of configuration options.\n\n#\n# Gateways Configuration, refer to the charts/gateways/values.yaml\n# for detailed configuration\n#\ngateways:\n  enabled: true\n\n#\n# sidecar-injector webhook configuration, refer to the\n# charts/sidecarInjectorWebhook/values.yaml for detailed configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n\n#\n# galley configuration, refer to charts/galley/values.yaml\n# for detailed configuration\n#\ngalley:\n  enabled: true\n\n#\n# mixer configuration\n#\n# @see charts/mixer/values.yaml for all values\nmixer:\n  policy:\n    # if policy is enabled the global.disablePolicyChecks has affect.\n    enabled: true\n\n  telemetry:\n    enabled: true\n#\n# pilot configuration\n#\n# @see charts/pilot/values.yaml\npilot:\n  enabled: true\n\n#\n# security configuration\n#\nsecurity:\n  enabled: true\n\n#\n# nodeagent configuration\n#\nnodeagent:\n  enabled: false\n\n#\n# addon grafana configuration\n#\ngrafana:\n  enabled: true\n\n#\n# addon prometheus configuration\n#\nprometheus:\n  enabled: true\n\n#\n# addon jaeger tracing configuration\n#\ntracing:\n  enabled: true\n\n#\n# addon kiali tracing configuration\n#\nkiali:\n  enabled: false\n\n#\n# addon certmanager configuration\n#\ncertmanager:\n  enabled: false\n\n#\n# Istio CNI plugin enabled\n#   This must be enabled to use the CNI plugin in Istio.  The CNI plugin is installed separately.\n#   If true, the privileged initContainer istio-init is not needed to perform the traffic redirect\n#   settings for the istio-proxy.\n#\nistio_cni:\n  enabled: false\n\n# addon Istio CoreDNS configuration\n#\nistiocoredns:\n  enabled: false\n\n# Common settings used among istio subcharts.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io\n  hub: gcr.io/istio-release\n\n  # Default tag for Istio images.\n  tag: master-latest-daily\n\n  # Comma-separated minimum per-scope logging level of messages to output, in the form of \u003cscope\u003e:\u003clevel\u003e,\u003cscope\u003e:\u003clevel\u003e\n  # The control plane has different scopes depending on component, but can configure default log level across all components\n  # If empty, default scope and level will be used as configured in code\n  logging:\n    level: \"default:info\"\n\n  # monitoring port used by mixer, pilot, galley and sidecar injector\n  monitoringPort: 15014\n\n  k8sIngress:\n    enabled: false\n    # Gateway used for k8s Ingress resources. By default it is\n    # using 'istio:ingressgateway' that will be installed by setting\n    # 'gateways.enabled' and 'gateways.istio-ingressgateway.enabled'\n    # flags to true.\n    gatewayName: ingressgateway\n    # enableHttps will add port 443 on the ingress.\n    # It REQUIRES that the certificates are installed  in the\n    # expected secrets - enabling this option without certificates\n    # will result in LDS rejection and the ingress will not work.\n    enableHttps: false\n\n  proxy:\n    # Configuration for the proxy init container\n    init:\n      resources:\n        limits:\n          cpu: 100m\n          memory: 50Mi\n        requests:\n          cpu: 10m\n          memory: 10Mi\n    image: proxyv2\n\n    # cluster domain. Default value is \"cluster.local\".\n    clusterDomain: \"cluster.local\"\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 2000m\n        memory: 1024Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0, then start worker thread for each CPU thread/core.\n    concurrency: 2\n\n    # Configures the access log for each sidecar.\n    # Options:\n    #   \"\" - disables access log\n    #   \"/dev/stdout\" - enables access log\n    accessLogFile: \"\"\n\n    # Configure how and what fields are displayed in sidecar access log. Setting to\n    # empty string will result in default log format\n    accessLogFormat: \"\"\n\n    # Configure the access log for sidecar to JSON or TEXT.\n    accessLogEncoding: TEXT\n\n    # Configure envoy gRPC access log service.\n    envoyAccessLogService:\n      enabled: false\n      host: # example: accesslog-service.istio-system\n      port: # example: 15000\n      tlsSettings:\n        mode: DISABLE # DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL\n        clientCertificate: # example: /etc/istio/als/cert-chain.pem\n        privateKey:        # example: /etc/istio/als/key.pem\n        caCertificates:    # example: /etc/istio/als/root-cert.pem\n        sni:               # example: als.somedomain\n        subjectAltNames: []\n        # - als.somedomain\n      tcpKeepalive:\n        probes: 3\n        time: 10s\n        interval: 10s\n\n    # Log level for proxy, applies to gateways and sidecars.  If left empty, \"warning\" is used.\n    # Expected values are: trace|debug|info|warning|error|critical|off\n    logLevel: \"\"\n\n    # Per Component log level for proxy, applies to gateways and sidecars. If a component level is\n    # not set, then the global \"logLevel\" will be used. If left empty, \"misc:error\" is used.\n    componentLogLevel: \"\"\n\n    # Configure the DNS refresh rate for Envoy cluster of type STRICT_DNS\n    # This must be given it terms of seconds. For example, 300s is valid but 5m is invalid.\n    dnsRefreshRate: 300s\n\n    # Automatic protocol detection uses a set of heuristics to\n    # determine whether the connection is using TLS or not (on the\n    # server side), as well as the application protocol being used\n    # (e.g., http vs tcp). These heuristics rely on the client sending\n    # the first bits of data. For server first protocols like MySQL,\n    # MongoDB, etc., Envoy will timeout on the protocol detection after\n    # the specified period, defaulting to non mTLS plain TCP\n    # traffic. Set this field to tweak the period that Envoy will wait\n    # for the client to send the first bits of data. (MUST BE \u003e=1ms)\n    protocolDetectionTimeout: 100ms\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n\n    # Image used to enable core dumps. This is only used, when \"enableCoreDump\" is set to true.\n    enableCoreDumpImage: ubuntu:xenial\n\n    # Default port for Pilot agent health checks. A value of 0 will disable health checking.\n    statusPort: 15020\n\n    # The initial delay for readiness probes in seconds.\n    readinessInitialDelaySeconds: 1\n\n    # The period between readiness probes.\n    readinessPeriodSeconds: 2\n\n    # The number of successive failed probes before indicating readiness failure.\n    readinessFailureThreshold: 30\n\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: \"*\"\n    excludeIPRanges: \"\"\n    excludeOutboundPorts: \"\"\n\n    # pod internal interfaces\n    kubevirtInterfaces: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: \"*\"\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Disabled by default.\n    # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.\n    envoyStatsd:\n      # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      enabled: false\n      host: # example: statsd-svc.istio-system\n      port: # example: 9125\n\n    # Sets the Envoy Metrics Service address, used to push Envoy metrics to an external collector\n    # via the Metrics Service gRPC API. This contains detailed stats information emitted directly\n    # by Envoy and should not be confused with the the Istio telemetry. The Envoy stats are also\n    # available to scrape via the Envoy admin port at either /stats or /stats/prometheus.\n    #\n    # See https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/metrics/v2/metrics_service.proto\n    # for details about Envoy's Metrics Service API.\n    #\n    # Disabled by default.\n    envoyMetricsService:\n      enabled: false\n      host: # example: metrics-service.istio-system\n      port: # example: 15000\n      tlsSettings:\n        mode: DISABLE # DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL\n        clientCertificate: # example: /etc/istio/ms/cert-chain.pem\n        privateKey:        # example: /etc/istio/ms/key.pem\n        caCertificates:    # example: /etc/istio/ms/root-cert.pem\n        sni:               # example: ms.somedomain\n        subjectAltNames: []\n        # - ms.somedomain \n      tcpKeepalive:\n        probes: 3\n        time: 10s\n        interval: 10s\n\n    # Specify which tracer to use. One of: zipkin, lightstep, datadog, stackdriver.\n    # If using stackdriver tracer outside GCP, set env GOOGLE_APPLICATION_CREDENTIALS to the GCP credential file.\n    tracer: \"zipkin\"\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n\n  # controlPlaneSecurityEnabled enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n\n  # disablePolicyChecks disables mixer policy checks.\n  # if mixer.policy.enabled==true then disablePolicyChecks has affect.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: true\n\n  # policyCheckFailOpen allows traffic in cases when the mixer policy service cannot be reached.\n  # Default is false which means the traffic is denied when the client is unable to connect to Mixer.\n  policyCheckFailOpen: false\n\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n\n  # Configuration for each of the supported tracers\n  tracer:\n    # Configuration for envoy to send trace data to LightStep.\n    # Disabled by default.\n    # address: the \u003chost\u003e:\u003cport\u003e of the satellite pool\n    # accessToken: required for sending data to the pool\n    # secure: specifies whether data should be sent with TLS\n    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is\n    #   required. If a value is specified then a secret called \"lightstep.cacert\" must be created in the destination\n    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.\n    #\n    lightstep:\n      address: \"\"                # example: lightstep-satellite:443\n      accessToken: \"\"            # example: abcdefg1234567\n      secure: true               # example: true|false\n      cacertPath: \"\"             # example: /etc/lightstep/cacert.pem\n    zipkin:\n      # Host:Port for reporting trace data in zipkin format. If not specified, will default to\n      # zipkin service (port 9411) in the same namespace as the other istio components.\n      address: \"\"\n    datadog:\n      # Host:Port for submitting traces to the Datadog agent.\n      address: \"$(HOST_IP):8126\"\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n    # If set to true, and a given service does not have a corresponding DestinationRule configured,\n    # or its DestinationRule does not have TLSSettings specified, Istio configures client side\n    # TLS configuration automatically, based on the server side mTLS authentication policy and the\n    # availibity of sidecars.\n    auto: false\n\n  # Lists the secrets you need to use to pull Istio images from a private registry.\n  imagePullSecrets: []\n    # - private-registry-key\n\n  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:\n  #   0 - Never scheduled\n  #   1 - Least preferred\n  #   2 - No preference\n  #   3 - Most preferred\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n\n  # Default node selector to be applied to all deployments so that all pods can be\n  # constrained to run a particular nodes. Each component can overwrite these default\n  # values by adding its node selector block in the relevant section below and setting\n  # the desired values.\n  defaultNodeSelector: {}\n\n  # Default node tolerations to be applied to all deployments so that all pods can be\n  # scheduled to a particular nodes with matching taints. Each component can overwrite\n  # these default values by adding its tolerations block in the relevant section below\n  # and setting the desired values.\n  # Configure this field in case that all pods of Istio control plane are expected to\n  # be scheduled to particular nodes with specified taints.\n  defaultTolerations: []\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n\n  # Custom DNS config for the pod to resolve names of services in other\n  # clusters. Use this to add additional search domains, and other settings.\n  # see\n  # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config\n  # This does not apply to gateway pods as they typically need a different\n  # set of DNS settings than the normal application pods (e.g., in\n  # multicluster scenarios).\n  # NOTE: If using templates, follow the pattern in the commented example below.\n  # podDNSSearchNamespaces:\n  # - global\n  # - \"[[ valueOrDefault .DeploymentMeta.Namespace \\\"default\\\" ]].global\"\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion:\n    enabled: false\n    # If set to true, the pilot and citadel mtls and the plaintext pilot ports\n    # will be exposed on an internal gateway\n    useILB: false\n\n  multiCluster:\n    # Set to true to connect two kubernetes clusters via their respective\n    # ingressgateway services when pods in each cluster cannot directly\n    # talk to one another. All clusters should be using Istio mTLS and must\n    # have a shared root CA for this model to work.\n    enabled: false\n\n    # Should be set to the name of the cluster this installation will run in. This is required for sidecar injection\n    # to properly label proxies\n    clusterName: \"\"\n\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # enable pod distruption budget for the control plane, which is used to\n  # ensure Istio control plane components are gradually upgraded or recovered.\n  defaultPodDisruptionBudget:\n    enabled: true\n    # The values aren't mutable due to a current PodDisruptionBudget limitation\n    # minAvailable: 1\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low priority class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Use the Mesh Control Protocol (MCP) for configuring Mixer and\n  # Pilot. Requires galley (`--set galley.enabled=true`).\n  useMCP: true\n\n  # The trust domain corresponds to the trust root of a system\n  # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\n  # Indicate the domain used in SPIFFE identity URL\n  # The default depends on the environment.\n  #   kubernetes: cluster.local\n  #   else:  default dns domain\n  trustDomain: \"\"\n\n  # Mesh ID means Mesh Identifier. It should be unique within the scope where\n  # meshes will interact with each other, but it is not required to be\n  # globally/universally unique. For example, if any of the following are true,\n  # then two meshes must have different Mesh IDs:\n  # - Meshes will have their telemetry aggregated in one place\n  # - Meshes will be federated together\n  # - Policy will be written referencing one mesh from the other\n  #\n  # If an administrator expects that any of these conditions may become true in\n  # the future, they should ensure their meshes have different Mesh IDs\n  # assigned.\n  #\n  # Within a multicluster mesh, each cluster must be (manually or auto)\n  # configured to have the same Mesh ID value. If an existing cluster 'joins' a\n  # multicluster mesh, it will need to be migrated to the new mesh ID. Details\n  # of migration TBD, and it may be a disruptive operation to change the Mesh\n  # ID post-install.\n  #\n  # If the mesh admin does not specify a value, Istio will use the value of the\n  # mesh's Trust Domain. The best practice is to select a proper Trust Domain\n  # value.\n  meshID: \"\"\n\n  # Set the default behavior of the sidecar for handling outbound traffic from the application:\n  # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no\n  #   services or ServiceEntries for the destination port\n  # REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well\n  #   as those defined through ServiceEntries\n  # ALLOW_ANY is the default in 1.1.  This means each pod will be able to make outbound requests\n  # to services outside of the mesh without any ServiceEntry.\n  # REGISTRY_ONLY was the default in 1.0.  If this behavior is desired, set the value below to REGISTRY_ONLY.\n  outboundTrafficPolicy:\n    mode: ALLOW_ANY\n\n  # The namespace where globally shared configurations should be present.\n  # DestinationRules that apply to the entire mesh (e.g., enabling mTLS),\n  # default Sidecar configs, etc. should be added to this namespace.\n  # configRootNamespace: istio-config\n\n  # set the default set of namespaces to which services, service entries, virtual services, destination\n  # rules should be exported to. Currently only one value can be provided in this list. This value\n  # should be one of the following two options:\n  # * implies these objects are visible to all namespaces, enabling any sidecar to talk to any other sidecar.\n  # . implies these objects are visible to only to sidecars in the same namespace, or if imported as a Sidecar.egress.host\n  # defaultConfigVisibilitySettings:\n  #- '*'\n\n  sds:\n    # SDS enabled. IF set to true, mTLS certificates for the sidecars will be\n    # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.\n    enabled: false\n    udsPath: \"\"\n    # The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.\n    # When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the\n    # JWT is intended for the CA.\n    token:\n      aud: istio-ca\n\n  # Configure the mesh networks to be used by the Split Horizon EDS.\n  #\n  # The following example defines two networks with different endpoints association methods.\n  # For `network1` all endpoints that their IP belongs to the provided CIDR range will be\n  # mapped to network1. The gateway for this network example is specified by its public IP\n  # address and port.\n  # The second network, `network2`, in this example is defined differently with all endpoints\n  # retrieved through the specified Multi-Cluster registry being mapped to network2. The\n  # gateway is also defined differently with the name of the gateway service on the remote\n  # cluster. The public IP for the gateway will be determined from that remote service (only\n  # LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,\n  # it still need to be configured manually).\n  #\n  # meshNetworks:\n  #   network1:\n  #     endpoints:\n  #     - fromCidr: \"192.168.0.1/24\"\n  #     gateways:\n  #     - address: 1.1.1.1\n  #       port: 80\n  #   network2:\n  #     endpoints:\n  #     - fromRegistry: reg1\n  #     gateways:\n  #     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local\n  #       port: 443\n  #\n  meshNetworks: {}\n\n  # Specifies the global locality load balancing settings.\n  # Locality-weighted load balancing allows administrators to control the distribution of traffic to\n  # endpoints based on the localities of where the traffic originates and where it will terminate.\n  # Either failover or distribute configuration can be set, but not both. If neither are provided\n  # failover mode will be used.\n  #\n  # localityLbSetting:\n  #   enabled: true\n  #   distribute:\n  #   - from: \"us-central1/*\"\n  #     to:\n  #       \"us-central1/*\": 80\n  #       \"us-central2/*\": 20\n  #\n  # localityLbSetting:\n  #   enabled: true\n  #   failover:\n  #   - from: us-east\n  #     to: eu-west\n  #   - from: us-west\n  #     to: us-east\n  localityLbSetting:\n    enabled: true\n\n  # Specifies whether helm test is enabled or not.\n  # This field is set to false by default, so 'helm template ...'\n  # will ignore the helm test yaml files when generating the template\n  enableHelmTest: false\n",
            "vars": null
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "kubeconfig",
      "provider": "provider.template",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "data",
      "type": "template_file",
      "name": "read_replica_proxy_connection",
      "each": "list",
      "provider": "provider.template",
      "instances": []
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "spinnaker_chart",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "850ca0ab386f6cd54800fac638c016ae18bc9772a95da0c68cf340d9e03eac25",
            "rendered": "gcs:\n  enabled: true\n  bucket: absolute-router-242207-spinnaker-conf\n  project: absolute-router-242207\n  jsonKey: '{\n  \"type\": \"service_account\",\n  \"project_id\": \"absolute-router-242207\",\n  \"private_key_id\": \"b7a8746e1a2f8bcdae77331dfecd27132a8b7d82\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCWI+foiTZG/GSW\\nUbzcrj7pIxfpHJZLctLDK9WQmOZ19Wq/ZP7PFh8Vc6CqJCGpUZn8SGxjEyC9uEgu\\n6Hooc6U0ij9fr+okFiJWBcrq+eZLbPT4wpa09Gj1ixyCjEJjX75kMTxqjFUzeXgJ\\nNG/jM9x2zOWhrOkL2wWJzrfTDV5tEiLa6z71OLq+F20bEjioWA9O1Hy7VZ7BPIrs\\nvkwkVw93b4XAyEH/JXchl+ZKnvCXXHFJTzrqBPVw6osIVFH8TUM1pAOZZtOPWsXY\\nvEirwAY9umEIY/dAb5EOI+dNgc/qx4J7LlX1wPQu89GJldv6tJtZZKA9W0wdHyY1\\nC4KbpP2hAgMBAAECggEABM4OXcPL/bi35JOD9F4L3dZjT3lvkYErUvkVDclf942V\\nJFmn2uLWUVxVDrvQjW83JZiZfYfyNsvdB4WuZHkWuU+gy6ZSFyAG4gQWLPQUXeum\\nUAffRQt2kR3uO78w6JVQMjuHrvM/o/1ywGuYa+GDPiWraFTOdjzV3wn/IqWucsTn\\nBpI3DtzI+9U24UReILX7B9SHl4y7uVkWhCBrL0OnHlRFLEfxnVVnWsbVIpj8YigY\\nqJdSpy15LNc/MaIbj1+omQp0EQ2ocSov3iLNWtpw4sIyFRpujUcA5weLFPvnwKaS\\nbY1wlSZEOkBqjvEhyvniM4bmdg/bPvdlchxS/vR3xwKBgQDL/T07hNOLCXkCTmL2\\nNr/aLAmWEbJTUztYvZN6yORMTy2l4Kk8PCx5USNtSObAMuWWa5pO669YWmHjjDX3\\nHTcLZTRWjsNSQKH2JKdqb0VJScIqrHeln5GBYrmvcoDsOK23EdLXkFX2MK4zKLB+\\nNRaIDp+X2klB3eu1yYsb6Y50uwKBgQC8a9f5LT3uVU/utKQ7+i8zQkvmtsfI9ddj\\nMVgBnOILZ81QJ36WD6Wo8ypsPnHbiWbFGst8JdVLwlkMJfplxgKAQ4OkyRpUNmZ/\\n7X9DUVkHcvLXQoiJuqbHlRCKeRxPtcWOlDphFVBDqWEkOFIwVTisJ+8l8iT9ljHM\\nSsDIIw+fUwKBgArxnyNeUOsYqwFQq0aCUXCnBCyk7mhCAuET6qGfvX/Kj6xijTHK\\nGKi5jakDTD3rfR3A0BqD0nhvAOlwUETdsGJQH6q1Jg13ojjOZpzzM0hnSJ95eUHN\\necTzQvsCrZ/+unMj5afi+nmmyvG7sRxURM0v26gN8fgyq76o/WmV8iqZAoGAZ3MW\\nevp5/Dbe0gJgAYYVECGgJqXH/u/rN8zJsuj9uqFdOlrUx3MD00Tez9thC9XelO1n\\nN1xWRWgJGABqACK9EMsApiK7z+ymTiqJKt6o8MwNxF4FNQlDtGSFVmG0R5dXRjbf\\n7pmTHfMLIKXDikHgAbVTOhQ+dvRVlwKb4cZON30CgYBzy2TgfhfXzCBeh95d+bw9\\nyZzv+5PJReIzncEMljpi0+qhytm3VuTM17TDFM/1Zdu1+XWCrVFY1oQn2EnLQmpp\\nsiAMKVI5mpc5fUUfv+6FI/YHqkRoRbZ4KrGetULULxS+dDYzZROBjhL1b62FR2Ep\\nIkN+kM9/5inuZbG5mF9dGg==\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com\",\n  \"client_id\": \"115693903076542695726\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/spinnaker-store-sa-id%40absolute-router-242207.iam.gserviceaccount.com\"\n}\n'\n\ndockerRegistries:\n- name: gcr\n  address: https://gcr.io\n  username: _json_key\n  password: '{\n  \"type\": \"service_account\",\n  \"project_id\": \"absolute-router-242207\",\n  \"private_key_id\": \"b7a8746e1a2f8bcdae77331dfecd27132a8b7d82\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCWI+foiTZG/GSW\\nUbzcrj7pIxfpHJZLctLDK9WQmOZ19Wq/ZP7PFh8Vc6CqJCGpUZn8SGxjEyC9uEgu\\n6Hooc6U0ij9fr+okFiJWBcrq+eZLbPT4wpa09Gj1ixyCjEJjX75kMTxqjFUzeXgJ\\nNG/jM9x2zOWhrOkL2wWJzrfTDV5tEiLa6z71OLq+F20bEjioWA9O1Hy7VZ7BPIrs\\nvkwkVw93b4XAyEH/JXchl+ZKnvCXXHFJTzrqBPVw6osIVFH8TUM1pAOZZtOPWsXY\\nvEirwAY9umEIY/dAb5EOI+dNgc/qx4J7LlX1wPQu89GJldv6tJtZZKA9W0wdHyY1\\nC4KbpP2hAgMBAAECggEABM4OXcPL/bi35JOD9F4L3dZjT3lvkYErUvkVDclf942V\\nJFmn2uLWUVxVDrvQjW83JZiZfYfyNsvdB4WuZHkWuU+gy6ZSFyAG4gQWLPQUXeum\\nUAffRQt2kR3uO78w6JVQMjuHrvM/o/1ywGuYa+GDPiWraFTOdjzV3wn/IqWucsTn\\nBpI3DtzI+9U24UReILX7B9SHl4y7uVkWhCBrL0OnHlRFLEfxnVVnWsbVIpj8YigY\\nqJdSpy15LNc/MaIbj1+omQp0EQ2ocSov3iLNWtpw4sIyFRpujUcA5weLFPvnwKaS\\nbY1wlSZEOkBqjvEhyvniM4bmdg/bPvdlchxS/vR3xwKBgQDL/T07hNOLCXkCTmL2\\nNr/aLAmWEbJTUztYvZN6yORMTy2l4Kk8PCx5USNtSObAMuWWa5pO669YWmHjjDX3\\nHTcLZTRWjsNSQKH2JKdqb0VJScIqrHeln5GBYrmvcoDsOK23EdLXkFX2MK4zKLB+\\nNRaIDp+X2klB3eu1yYsb6Y50uwKBgQC8a9f5LT3uVU/utKQ7+i8zQkvmtsfI9ddj\\nMVgBnOILZ81QJ36WD6Wo8ypsPnHbiWbFGst8JdVLwlkMJfplxgKAQ4OkyRpUNmZ/\\n7X9DUVkHcvLXQoiJuqbHlRCKeRxPtcWOlDphFVBDqWEkOFIwVTisJ+8l8iT9ljHM\\nSsDIIw+fUwKBgArxnyNeUOsYqwFQq0aCUXCnBCyk7mhCAuET6qGfvX/Kj6xijTHK\\nGKi5jakDTD3rfR3A0BqD0nhvAOlwUETdsGJQH6q1Jg13ojjOZpzzM0hnSJ95eUHN\\necTzQvsCrZ/+unMj5afi+nmmyvG7sRxURM0v26gN8fgyq76o/WmV8iqZAoGAZ3MW\\nevp5/Dbe0gJgAYYVECGgJqXH/u/rN8zJsuj9uqFdOlrUx3MD00Tez9thC9XelO1n\\nN1xWRWgJGABqACK9EMsApiK7z+ymTiqJKt6o8MwNxF4FNQlDtGSFVmG0R5dXRjbf\\n7pmTHfMLIKXDikHgAbVTOhQ+dvRVlwKb4cZON30CgYBzy2TgfhfXzCBeh95d+bw9\\nyZzv+5PJReIzncEMljpi0+qhytm3VuTM17TDFM/1Zdu1+XWCrVFY1oQn2EnLQmpp\\nsiAMKVI5mpc5fUUfv+6FI/YHqkRoRbZ4KrGetULULxS+dDYzZROBjhL1b62FR2Ep\\nIkN+kM9/5inuZbG5mF9dGg==\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com\",\n  \"client_id\": \"115693903076542695726\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/spinnaker-store-sa-id%40absolute-router-242207.iam.gserviceaccount.com\"\n}\n'\n  email: 1234@5678.com\n\n# Disable minio as the default storage backend\nminio:\n  enabled: false\n\njenkins:\n  enabled: false\n\n# Configure Spinnaker to enable GCP services\nhalyard:\n  spinnakerVersion: 1.16.0\n  image:\n    tag: 1.23.2\n    #tag: 1.16.0\n  additionalScripts:\n    create: true\n    data:\n      enable_gcs_artifacts.sh: |-\n        $HAL_COMMAND config artifact gcs account add gcs-absolute-router-242207 --json-path /opt/gcs/key.json\n        $HAL_COMMAND config artifact gcs enable\n      enable_pubsub_triggers.sh: |-\n        $HAL_COMMAND config pubsub google enable\n        $HAL_COMMAND config pubsub google subscription add spinnaker-subscription --subscription-name spinnaker-subscription --json-path /opt/gcs/key.json --project absolute-router-242207 --message-format GCB\n\nkubeConfig:\n  enabled: true\n  secretName: spin-kubeconfig\n  secretKey: spinnaker-kubeconfig\n  contexts:\n  - core\n  deploymentContext: core\n\n#serviceAccount:\n#  create: false\n#  create: true\n#  halyardName:\n#  spinnakerName:\n\n",
            "template": "gcs:\n  enabled: true\n  bucket: ${google_spin_bucket_name}\n  project: ${google_project_name}\n  jsonKey: '${google_spin_sa_key}'\n\ndockerRegistries:\n- name: gcr\n  address: https://gcr.io\n  username: _json_key\n  password: '${google_spin_sa_key}'\n  email: 1234@5678.com\n\n# Disable minio as the default storage backend\nminio:\n  enabled: false\n\njenkins:\n  enabled: false\n\n# Configure Spinnaker to enable GCP services\nhalyard:\n  spinnakerVersion: 1.16.0\n  image:\n    tag: 1.23.2\n    #tag: 1.16.0\n  additionalScripts:\n    create: true\n    data:\n      enable_gcs_artifacts.sh: |-\n        $HAL_COMMAND config artifact gcs account add gcs-${google_project_name} --json-path /opt/gcs/key.json\n        $HAL_COMMAND config artifact gcs enable\n      enable_pubsub_triggers.sh: |-\n        $HAL_COMMAND config pubsub google enable\n        $HAL_COMMAND config pubsub google subscription add ${google_subscription_name} --subscription-name ${google_subscription_name} --json-path /opt/gcs/key.json --project ${google_project_name} --message-format GCB\n\nkubeConfig:\n  enabled: true\n  secretName: spin-kubeconfig\n  secretKey: spinnaker-kubeconfig\n  contexts:\n  - core\n  deploymentContext: core\n\n#serviceAccount:\n#  create: false\n#  create: true\n#  halyardName:\n#  spinnakerName:\n\n",
            "vars": {
              "google_project_name": "absolute-router-242207",
              "google_spin_bucket_name": "absolute-router-242207-spinnaker-conf",
              "google_spin_sa_key": "{\n  \"type\": \"service_account\",\n  \"project_id\": \"absolute-router-242207\",\n  \"private_key_id\": \"b7a8746e1a2f8bcdae77331dfecd27132a8b7d82\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCWI+foiTZG/GSW\\nUbzcrj7pIxfpHJZLctLDK9WQmOZ19Wq/ZP7PFh8Vc6CqJCGpUZn8SGxjEyC9uEgu\\n6Hooc6U0ij9fr+okFiJWBcrq+eZLbPT4wpa09Gj1ixyCjEJjX75kMTxqjFUzeXgJ\\nNG/jM9x2zOWhrOkL2wWJzrfTDV5tEiLa6z71OLq+F20bEjioWA9O1Hy7VZ7BPIrs\\nvkwkVw93b4XAyEH/JXchl+ZKnvCXXHFJTzrqBPVw6osIVFH8TUM1pAOZZtOPWsXY\\nvEirwAY9umEIY/dAb5EOI+dNgc/qx4J7LlX1wPQu89GJldv6tJtZZKA9W0wdHyY1\\nC4KbpP2hAgMBAAECggEABM4OXcPL/bi35JOD9F4L3dZjT3lvkYErUvkVDclf942V\\nJFmn2uLWUVxVDrvQjW83JZiZfYfyNsvdB4WuZHkWuU+gy6ZSFyAG4gQWLPQUXeum\\nUAffRQt2kR3uO78w6JVQMjuHrvM/o/1ywGuYa+GDPiWraFTOdjzV3wn/IqWucsTn\\nBpI3DtzI+9U24UReILX7B9SHl4y7uVkWhCBrL0OnHlRFLEfxnVVnWsbVIpj8YigY\\nqJdSpy15LNc/MaIbj1+omQp0EQ2ocSov3iLNWtpw4sIyFRpujUcA5weLFPvnwKaS\\nbY1wlSZEOkBqjvEhyvniM4bmdg/bPvdlchxS/vR3xwKBgQDL/T07hNOLCXkCTmL2\\nNr/aLAmWEbJTUztYvZN6yORMTy2l4Kk8PCx5USNtSObAMuWWa5pO669YWmHjjDX3\\nHTcLZTRWjsNSQKH2JKdqb0VJScIqrHeln5GBYrmvcoDsOK23EdLXkFX2MK4zKLB+\\nNRaIDp+X2klB3eu1yYsb6Y50uwKBgQC8a9f5LT3uVU/utKQ7+i8zQkvmtsfI9ddj\\nMVgBnOILZ81QJ36WD6Wo8ypsPnHbiWbFGst8JdVLwlkMJfplxgKAQ4OkyRpUNmZ/\\n7X9DUVkHcvLXQoiJuqbHlRCKeRxPtcWOlDphFVBDqWEkOFIwVTisJ+8l8iT9ljHM\\nSsDIIw+fUwKBgArxnyNeUOsYqwFQq0aCUXCnBCyk7mhCAuET6qGfvX/Kj6xijTHK\\nGKi5jakDTD3rfR3A0BqD0nhvAOlwUETdsGJQH6q1Jg13ojjOZpzzM0hnSJ95eUHN\\necTzQvsCrZ/+unMj5afi+nmmyvG7sRxURM0v26gN8fgyq76o/WmV8iqZAoGAZ3MW\\nevp5/Dbe0gJgAYYVECGgJqXH/u/rN8zJsuj9uqFdOlrUx3MD00Tez9thC9XelO1n\\nN1xWRWgJGABqACK9EMsApiK7z+ymTiqJKt6o8MwNxF4FNQlDtGSFVmG0R5dXRjbf\\n7pmTHfMLIKXDikHgAbVTOhQ+dvRVlwKb4cZON30CgYBzy2TgfhfXzCBeh95d+bw9\\nyZzv+5PJReIzncEMljpi0+qhytm3VuTM17TDFM/1Zdu1+XWCrVFY1oQn2EnLQmpp\\nsiAMKVI5mpc5fUUfv+6FI/YHqkRoRbZ4KrGetULULxS+dDYzZROBjhL1b62FR2Ep\\nIkN+kM9/5inuZbG5mF9dGg==\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com\",\n  \"client_id\": \"115693903076542695726\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/spinnaker-store-sa-id%40absolute-router-242207.iam.gserviceaccount.com\"\n}\n",
              "google_subscription_name": "spinnaker-subscription"
            }
          },
          "depends_on": [
            "google_pubsub_subscription.spinnaker_pubsub_subscription",
            "google_service_account_key.spinnaker-store-sa-key",
            "google_storage_bucket.spinnaker-store"
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "spinnaker_install_sh",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "f6222d83c47ac2e96d08d6b9d20f86380bec85ed8fe09583eb500f858ca7f7f9",
            "rendered": "#!/bin/bash\n\nCORE_CLUSTER=gke-gevops\nCORE_USER=core-spinnaker-service-account\nKUBECONFIG_FILE=spinnaker-kubeconfig\nSPINNAKER_SA=create-spinnaker-sa.yaml\n\nkubectl --kubeconfig=kubeconfig apply -f $SPINNAKER_SA\nCORE_TOKEN=$(kubectl  --kubeconfig=kubeconfig  get secret \\\n    $(kubectl --kubeconfig=kubeconfig get serviceaccount spinnaker-service-account \\\n    -n spinnaker \\\n    -o jsonpath='{.secrets[0].name}') \\\n    -n spinnaker \\\n    -o jsonpath='{.data.token}' | base64 --decode)\n\nkubectl --kubeconfig=kubeconfig config view --raw -o json | jq -r '.clusters[] | select(.name == \"'gke-gevops'\") | .cluster.\"certificate-authority-data\"' | base64 -d \u003e core_cluster_ca.crt\nCORE_SERVER=$(kubectl --kubeconfig=kubeconfig config view --raw -o json | jq -r '.clusters[] | select(.name == \"'gke-gevops'\") | .cluster.\"server\"')\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-cluster $CORE_CLUSTER \\\n    --certificate-authority=./core_cluster_ca.crt \\\n    --embed-certs=true \\\n    --server $CORE_SERVER\n\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-credentials $CORE_USER --token $CORE_TOKEN\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-context core --user $CORE_USER --cluster $CORE_CLUSTER\nkubectl --kubeconfig=kubeconfig create secret generic --from-file=./spinnaker-kubeconfig spin-kubeconfig -n spinnaker",
            "template": "#!/bin/bash\n\nCORE_CLUSTER=${cluster_name}\nCORE_USER=core-spinnaker-service-account\nKUBECONFIG_FILE=spinnaker-kubeconfig\nSPINNAKER_SA=create-spinnaker-sa.yaml\n\nkubectl --kubeconfig=kubeconfig apply -f $SPINNAKER_SA\nCORE_TOKEN=$(kubectl  --kubeconfig=kubeconfig  get secret \\\n    $(kubectl --kubeconfig=kubeconfig get serviceaccount spinnaker-service-account \\\n    -n spinnaker \\\n    -o jsonpath='{.secrets[0].name}') \\\n    -n spinnaker \\\n    -o jsonpath='{.data.token}' | base64 --decode)\n\nkubectl --kubeconfig=kubeconfig config view --raw -o json | jq -r '.clusters[] | select(.name == \"'${cluster_name}'\") | .cluster.\"certificate-authority-data\"' | base64 -d \u003e core_cluster_ca.crt\nCORE_SERVER=$(kubectl --kubeconfig=kubeconfig config view --raw -o json | jq -r '.clusters[] | select(.name == \"'${cluster_name}'\") | .cluster.\"server\"')\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-cluster $CORE_CLUSTER \\\n    --certificate-authority=./core_cluster_ca.crt \\\n    --embed-certs=true \\\n    --server $CORE_SERVER\n\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-credentials $CORE_USER --token $CORE_TOKEN\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-context core --user $CORE_USER --cluster $CORE_CLUSTER\nkubectl --kubeconfig=kubeconfig create secret generic --from-file=./spinnaker-kubeconfig spin-kubeconfig -n spinnaker",
            "vars": {
              "cluster_name": "gke-gevops"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "template_pipeline_spin_cfgmanapp",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "7ea311c83e38f75c2dfb3bf2bf25fb1b1cca32393350e13e99e3f29f9c37fbf8",
            "rendered": "{\n \"application\": \"cfgmanapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"447fdcdf-91fc-47be-afac-6a0215d49855\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"fluffy-mouse-5\",\n   \"id\": \"438cbba3-354f-46b9-9205-bfbf7eeef2b5\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"10cb1c99-1df7-4cca-bcdd-ff6b180698df\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"097364cb-6b54-481b-8ddd-c90042c7c3dd\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"cfgmanapp-build\",\n \"parameterConfig\": [],\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"438cbba3-354f-46b9-9205-bfbf7eeef2b5\",\n   \"moniker\": {\n    \"app\": \"cfgmanapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_cfgmanapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568314566748\"\n}\n",
            "template": "{\n \"application\": \"cfgmanapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"447fdcdf-91fc-47be-afac-6a0215d49855\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"reference\": \"gs://${google_project_name}-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"fluffy-mouse-5\",\n   \"id\": \"438cbba3-354f-46b9-9205-bfbf7eeef2b5\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"10cb1c99-1df7-4cca-bcdd-ff6b180698df\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"097364cb-6b54-481b-8ddd-c90042c7c3dd\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"cfgmanapp-build\",\n \"parameterConfig\": [],\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-${google_project_name}\",\n   \"manifestArtifactId\": \"438cbba3-354f-46b9-9205-bfbf7eeef2b5\",\n   \"moniker\": {\n    \"app\": \"cfgmanapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_cfgmanapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568314566748\"\n}\n",
            "vars": {
              "google_project_name": "absolute-router-242207"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "template_pipeline_spin_frontendapp",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "1dee386d4d11c70791accbc32b2f3f8a2a4fb2c4cb03d03ebf93398593403a1f",
            "rendered": "{\n \"application\": \"frontendapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"2551d0f3-9b4b-4a2f-a4d3-e4285f2c3f86\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"old-dingo-40\",\n   \"id\": \"c7f3ee1d-e510-4086-a356-5a73748db20d\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"2c4d7898-9e38-43b1-8c88-95e22be2e091\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"84ba9989-b686-46b8-afca-8cd2563ef23b\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"frontendapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"c7f3ee1d-e510-4086-a356-5a73748db20d\",\n   \"moniker\": {\n    \"app\": \"frontendapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_frontendapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568317176787\"\n}\n",
            "template": "{\n \"application\": \"frontendapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"2551d0f3-9b4b-4a2f-a4d3-e4285f2c3f86\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://${google_project_name}-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"old-dingo-40\",\n   \"id\": \"c7f3ee1d-e510-4086-a356-5a73748db20d\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"2c4d7898-9e38-43b1-8c88-95e22be2e091\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"84ba9989-b686-46b8-afca-8cd2563ef23b\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"frontendapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-${google_project_name}\",\n   \"manifestArtifactId\": \"c7f3ee1d-e510-4086-a356-5a73748db20d\",\n   \"moniker\": {\n    \"app\": \"frontendapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_frontendapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568317176787\"\n}\n",
            "vars": {
              "google_project_name": "absolute-router-242207"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "template_pipeline_spin_logicapp",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "ac29b280a2b08e271a606ccdf5184dd4a5efd1a4e3e3a59c66400863ad17efd6",
            "rendered": "{\n \"application\": \"logicapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"8dce9c56-3d8e-4577-bc92-e415a5ac2cbc\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"itchy-chipmunk-31\",\n   \"id\": \"d61aa3a9-deac-4ce9-b918-103f7117155f\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"2bc4391a-ddef-48d8-916a-60a28d08a1c7\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"f6497fb1-a383-4ed9-bfbb-2a83fd0bc55f\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"logicapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"d61aa3a9-deac-4ce9-b918-103f7117155f\",\n   \"moniker\": {\n    \"app\": \"logicapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_logicapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568316829743\"\n}\n",
            "template": "{\n \"application\": \"logicapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"8dce9c56-3d8e-4577-bc92-e415a5ac2cbc\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://${google_project_name}-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"itchy-chipmunk-31\",\n   \"id\": \"d61aa3a9-deac-4ce9-b918-103f7117155f\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"2bc4391a-ddef-48d8-916a-60a28d08a1c7\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"f6497fb1-a383-4ed9-bfbb-2a83fd0bc55f\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"logicapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-${google_project_name}\",\n   \"manifestArtifactId\": \"d61aa3a9-deac-4ce9-b918-103f7117155f\",\n   \"moniker\": {\n    \"app\": \"logicapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_logicapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568316829743\"\n}\n",
            "vars": {
              "google_project_name": "absolute-router-242207"
            }
          }
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "template_pipeline_spin_queryapp",
      "provider": "provider.template",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "6e860836dc84f796162da225b04710d466e3b9688f48b0cb7d358a0f721f2da2",
            "rendered": "{\n \"application\": \"queryapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"17318591-1d72-44cd-9f94-d17486d8b8d4\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"lazy-vampirebat-91\",\n   \"id\": \"5d09be1d-7b4d-4dff-a05f-55d31caf4cfa\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"3d006036-bbe7-47e9-a0d7-fa2ca7562352\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"360ee9eb-7c93-4deb-b7e4-168cc75887dc\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"queryapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"5d09be1d-7b4d-4dff-a05f-55d31caf4cfa\",\n   \"moniker\": {\n    \"app\": \"queryapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_queryapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568317019876\"\n}\n",
            "template": "{\n \"application\": \"queryapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"17318591-1d72-44cd-9f94-d17486d8b8d4\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://${google_project_name}-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"lazy-vampirebat-91\",\n   \"id\": \"5d09be1d-7b4d-4dff-a05f-55d31caf4cfa\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-${google_project_name}\",\n    \"id\": \"3d006036-bbe7-47e9-a0d7-fa2ca7562352\",\n    \"name\": \"gs://${google_project_name}-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"360ee9eb-7c93-4deb-b7e4-168cc75887dc\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"queryapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-${google_project_name}\",\n   \"manifestArtifactId\": \"5d09be1d-7b4d-4dff-a05f-55d31caf4cfa\",\n   \"moniker\": {\n    \"app\": \"queryapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_queryapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568317019876\"\n}\n",
            "vars": {
              "google_project_name": "absolute-router-242207"
            }
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_cloudbuild_trigger",
      "name": "frontendapp-cfgmanapp",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "build": [],
            "create_time": "2019-09-24T17:38:19.334922904Z",
            "description": "Trigger Git repository github_kv-053-devops_cfgmanapp",
            "disabled": false,
            "filename": "cloudbuild.yaml",
            "id": "absolute-router-242207/dda4aa4d-6770-411d-b62b-dc4fcfad0257",
            "ignored_files": null,
            "included_files": null,
            "project": "absolute-router-242207",
            "substitutions": null,
            "timeouts": null,
            "trigger_id": "dda4aa4d-6770-411d-b62b-dc4fcfad0257",
            "trigger_template": [
              {
                "branch_name": "master",
                "commit_sha": "",
                "dir": "",
                "project_id": "absolute-router-242207",
                "repo_name": "github_kv-053-devops_cfgmanapp",
                "tag_name": ""
              }
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_cloudbuild_trigger",
      "name": "frontendapp-queryapp",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "build": [],
            "create_time": "2019-09-24T17:38:18.764723472Z",
            "description": "Trigger Git repository github_kv-053-devops_queryapp",
            "disabled": false,
            "filename": "cloudbuild.yaml",
            "id": "absolute-router-242207/26d505a3-25f2-414f-a70f-6fede7878463",
            "ignored_files": null,
            "included_files": null,
            "project": "absolute-router-242207",
            "substitutions": null,
            "timeouts": null,
            "trigger_id": "26d505a3-25f2-414f-a70f-6fede7878463",
            "trigger_template": [
              {
                "branch_name": "master",
                "commit_sha": "",
                "dir": "",
                "project_id": "absolute-router-242207",
                "repo_name": "github_kv-053-devops_queryapp",
                "tag_name": ""
              }
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_cloudbuild_trigger",
      "name": "frontendapp-trigger",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "build": [],
            "create_time": "2019-09-24T17:38:19.305205311Z",
            "description": "Trigger Git repository github_kv-053-devops_frontendapp",
            "disabled": false,
            "filename": "cloudbuild.yaml",
            "id": "absolute-router-242207/b36123fe-7bd2-4dce-b4d3-a19b713b7a63",
            "ignored_files": null,
            "included_files": null,
            "project": "absolute-router-242207",
            "substitutions": null,
            "timeouts": null,
            "trigger_id": "b36123fe-7bd2-4dce-b4d3-a19b713b7a63",
            "trigger_template": [
              {
                "branch_name": "master",
                "commit_sha": "",
                "dir": "",
                "project_id": "absolute-router-242207",
                "repo_name": "github_kv-053-devops_frontendapp",
                "tag_name": ""
              }
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_cloudbuild_trigger",
      "name": "logicapp-trigger",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "build": [],
            "create_time": "2019-09-24T17:38:19.322756231Z",
            "description": "Trigger Git repository github_kv-053-devops_logicapp",
            "disabled": false,
            "filename": "cloudbuild.yaml",
            "id": "absolute-router-242207/0ecf1c38-c2ee-46d6-a089-1fba386c0669",
            "ignored_files": null,
            "included_files": null,
            "project": "absolute-router-242207",
            "substitutions": null,
            "timeouts": null,
            "trigger_id": "0ecf1c38-c2ee-46d6-a089-1fba386c0669",
            "trigger_template": [
              {
                "branch_name": "master",
                "commit_sha": "",
                "dir": "",
                "project_id": "absolute-router-242207",
                "repo_name": "github_kv-053-devops_logicapp",
                "tag_name": ""
              }
            ]
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "default_ssh_http_https",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22",
                  "80",
                  "443"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2019-09-24T10:39:17.293-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "id": "gke-gevops-firewall",
            "name": "gke-gevops-firewall",
            "network": "https://www.googleapis.com/compute/v1/projects/absolute-router-242207/global/networks/private-network-gke-gevops",
            "priority": 1000,
            "project": "absolute-router-242207",
            "self_link": "https://www.googleapis.com/compute/v1/projects/absolute-router-242207/global/firewalls/gke-gevops-firewall",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "depends_on": [
            "google_compute_network.private_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_global_address",
      "name": "private_ip_address",
      "provider": "provider.google-beta",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "address": "10.37.0.0",
            "address_type": "INTERNAL",
            "creation_timestamp": "2019-09-24T10:39:17.232-07:00",
            "description": "",
            "id": "private-ip-gke-gevops",
            "ip_version": "",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "name": "private-ip-gke-gevops",
            "network": "https://www.googleapis.com/compute/v1/projects/absolute-router-242207/global/networks/private-network-gke-gevops",
            "prefix_length": 16,
            "project": "absolute-router-242207",
            "purpose": "VPC_PEERING",
            "self_link": "https://www.googleapis.com/compute/v1/projects/absolute-router-242207/global/addresses/private-ip-gke-gevops",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "depends_on": [
            "google_compute_network.private_network"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_network",
      "name": "private_network",
      "provider": "provider.google-beta",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": true,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "private-network-gke-gevops",
            "ipv4_range": "",
            "name": "private-network-gke-gevops",
            "project": "absolute-router-242207",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/absolute-router-242207/global/networks/private-network-gke-gevops",
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_container_cluster",
      "name": "primary",
      "provider": "provider.google",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "google_container_node_pool",
      "name": "primary",
      "provider": "provider.google",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "google_pubsub_subscription",
      "name": "spinnaker_pubsub_subscription",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "ack_deadline_seconds": 20,
            "expiration_policy": [
              {
                "ttl": "2592000s"
              }
            ],
            "id": "projects/absolute-router-242207/subscriptions/spinnaker-subscription",
            "labels": null,
            "message_retention_duration": "604800s",
            "name": "spinnaker-subscription",
            "path": "projects//subscriptions/spinnaker-subscription",
            "project": "absolute-router-242207",
            "push_config": [],
            "retain_acked_messages": false,
            "timeouts": null,
            "topic": "projects/absolute-router-242207/topics/cloud-builds"
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_pubsub_subscription_iam_binding",
      "name": "spinnaker_pubsub_iam_read",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "etag": "BwWTUADXeWo=",
            "id": "projects/absolute-router-242207/subscriptions/spinnaker-subscription/roles/pubsub.subscriber",
            "members": [
              "serviceAccount:spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com"
            ],
            "project": null,
            "role": "roles/pubsub.subscriber",
            "subscription": "spinnaker-subscription"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "google_pubsub_subscription.spinnaker_pubsub_subscription",
            "google_service_account.spinnaker-store-sa"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_service_account",
      "name": "spinnaker-store-sa",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "spinnaker-store-sa-id",
            "display_name": "Spinnaker-store-sa",
            "email": "spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com",
            "id": "projects/absolute-router-242207/serviceAccounts/spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com",
            "name": "projects/absolute-router-242207/serviceAccounts/spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com",
            "policy_data": null,
            "project": "absolute-router-242207",
            "unique_id": "115693903076542695726"
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_service_account_key",
      "name": "spinnaker-store-sa-key",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "projects/absolute-router-242207/serviceAccounts/spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com/keys/b7a8746e1a2f8bcdae77331dfecd27132a8b7d82",
            "key_algorithm": "KEY_ALG_RSA_2048",
            "name": "projects/absolute-router-242207/serviceAccounts/spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com/keys/b7a8746e1a2f8bcdae77331dfecd27132a8b7d82",
            "pgp_key": null,
            "private_key": "ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAiYWJzb2x1dGUtcm91dGVyLTI0MjIwNyIsCiAgInByaXZhdGVfa2V5X2lkIjogImI3YTg3NDZlMWEyZjhiY2RhZTc3MzMxZGZlY2QyNzEzMmE4YjdkODIiLAogICJwcml2YXRlX2tleSI6ICItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cbk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRQ1dJK2ZvaVRaRy9HU1dcblViemNyajdwSXhmcEhKWkxjdExESzlXUW1PWjE5V3EvWlA3UEZoOFZjNkNxSkNHcFVabjhTR3hqRXlDOXVFZ3VcbjZIb29jNlUwaWo5ZnIrb2tGaUpXQmNycStlWkxiUFQ0d3BhMDlHajFpeHlDakVKalg3NWtNVHhxakZVemVYZ0pcbk5HL2pNOXgyek9XaHJPa0wyd1dKenJmVERWNXRFaUxhNno3MU9McStGMjBiRWppb1dBOU8xSHk3Vlo3QlBJcnNcbnZrd2tWdzkzYjRYQXlFSC9KWGNobCtaS252Q1hYSEZKVHpycUJQVnc2b3NJVkZIOFRVTTFwQU9aWnRPUFdzWFlcbnZFaXJ3QVk5dW1FSVkvZEFiNUVPSStkTmdjL3F4NEo3TGxYMXdQUXU4OUdKbGR2NnRKdFpaS0E5VzB3ZEh5WTFcbkM0S2JwUDJoQWdNQkFBRUNnZ0VBQk00T1hjUEwvYmkzNUpPRDlGNEwzZFpqVDNsdmtZRXJVdmtWRGNsZjk0MlZcbkpGbW4ydUxXVVZ4VkRydlFqVzgzSlppWmZZZnlOc3ZkQjRXdVpIa1d1VStneTZaU0Z5QUc0Z1FXTFBRVVhldW1cblVBZmZSUXQya1IzdU83OHc2SlZRTWp1SHJ2TS9vLzF5d0d1WWErR0RQaVdyYUZUT2RqelYzd24vSXFXdWNzVG5cbkJwSTNEdHpJKzlVMjRVUmVJTFg3QjlTSGw0eTd1VmtXaENCckwwT25IbFJGTEVmeG5WVm5Xc2JWSXBqOFlpZ1lcbnFKZFNweTE1TE5jL01hSWJqMStvbVFwMEVRMm9jU292M2lMTld0cHc0c0l5RlJwdWpVY0E1d2VMRlB2bndLYVNcbmJZMXdsU1pFT2tCcWp2RWh5dm5pTTRibWRnL2JQdmRsY2h4Uy92UjN4d0tCZ1FETC9UMDdoTk9MQ1hrQ1RtTDJcbk5yL2FMQW1XRWJKVFV6dFl2Wk42eU9STVR5Mmw0S2s4UEN4NVVTTnRTT2JBTXVXV2E1cE82NjlZV21IampEWDNcbkhUY0xaVFJXanNOU1FLSDJKS2RxYjBWSlNjSXFySGVsbjVHQllybXZjb0RzT0syM0VkTFhrRlgyTUs0ektMQitcbk5SYUlEcCtYMmtsQjNldTF5WXNiNlk1MHV3S0JnUUM4YTlmNUxUM3VWVS91dEtRNytpOHpRa3ZtdHNmSTlkZGpcbk1WZ0JuT0lMWjgxUUozNldENldvOHlwc1BuSGJpV2JGR3N0OEpkVkx3bGtNSmZwbHhnS0FRNE9reVJwVU5tWi9cbjdYOURVVmtIY3ZMWFFvaUp1cWJIbFJDS2VSeFB0Y1dPbERwaEZWQkRxV0VrT0ZJd1ZUaXNKKzhsOGlUOWxqSE1cblNzRElJdytmVXdLQmdBcnhueU5lVU9zWXF3RlFxMGFDVVhDbkJDeWs3bWhDQXVFVDZxR2Z2WC9LajZ4aWpUSEtcbkdLaTVqYWtEVEQzcmZSM0EwQnFEMG5odkFPbHdVRVRkc0dKUUg2cTFKZzEzb2pqT1pwenpNMGhuU0o5NWVVSE5cbmVjVHpRdnNDclovK3VuTWo1YWZpK25tbXl2RzdzUnhVUk0wdjI2Z044Zmd5cTc2by9XbVY4aXFaQW9HQVozTVdcbmV2cDUvRGJlMGdKZ0FZWVZFQ0dnSnFYSC91L3JOOHpKc3VqOXVxRmRPbHJVeDNNRDAwVGV6OXRoQzlYZWxPMW5cbk4xeFdSV2dKR0FCcUFDSzlFTXNBcGlLN3oreW1UaXFKS3Q2bzhNd054RjRGTlFsRHRHU0ZWbUcwUjVkWFJqYmZcbjdwbVRIZk1MSUtYRGlrSGdBYlZUT2hRK2R2UlZsd0tiNGNaT04zMENnWUJ6eTJUZ2ZoZlh6Q0JlaDk1ZCtidzlcbnlaenYrNVBKUmVJem5jRU1sanBpMCtxaHl0bTNWdVRNMTdUREZNLzFaZHUxK1hXQ3JWRlkxb1FuMkVuTFFtcHBcbnNpQU1LVkk1bXBjNWZVVWZ2KzZGSS9ZSHFrUm9SYlo0S3JHZXRVTFVMeFMrZERZelpST0JqaEwxYjYyRlIyRXBcbklrTitrTTkvNWludVpiRzVtRjlkR2c9PVxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxuIiwKICAiY2xpZW50X2VtYWlsIjogInNwaW5uYWtlci1zdG9yZS1zYS1pZEBhYnNvbHV0ZS1yb3V0ZXItMjQyMjA3LmlhbS5nc2VydmljZWFjY291bnQuY29tIiwKICAiY2xpZW50X2lkIjogIjExNTY5MzkwMzA3NjU0MjY5NTcyNiIsCiAgImF1dGhfdXJpIjogImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoIiwKICAidG9rZW5fdXJpIjogImh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwKICAiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92MS9jZXJ0cyIsCiAgImNsaWVudF94NTA5X2NlcnRfdXJsIjogImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvc3Bpbm5ha2VyLXN0b3JlLXNhLWlkJTQwYWJzb2x1dGUtcm91dGVyLTI0MjIwNy5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIKfQo=",
            "private_key_encrypted": null,
            "private_key_fingerprint": null,
            "private_key_type": "TYPE_GOOGLE_CREDENTIALS_FILE",
            "public_key": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMrakNDQWVLZ0F3SUJBZ0lJYWVxOXJsSGkzQ3N3RFFZSktvWklodmNOQVFFRkJRQXdJREVlTUJ3R0ExVUUKQXhNVk1URTFOamt6T1RBek1EYzJOVFF5TmprMU56STJNQjRYRFRFNU1Ea3lOREUzTXpneU1Wb1hEVEk1TURreQpNVEUzTXpneU1Wb3dJREVlTUJ3R0ExVUVBeE1WTVRFMU5qa3pPVEF6TURjMk5UUXlOamsxTnpJMk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQWxpUG42SWsyUnZ4a2xsRzgzSzQrNlNNWDZSeVcKUzNMU3d5dlZrSmptZGZWcXYyVCt6eFlmRlhPZ3FpUWhxVkdaL0Voc1l4TWd2YmhJTHVoNktIT2xOSW8vWDYvcQpKQllpVmdYSzZ2bm1TMnowK01LV3RQUm85WXNjZ294Q1kxKytaREU4YW94Vk0zbDRDVFJ2NHpQY2RzemxvYXpwCkM5c0ZpYzYzMHcxZWJSSWkydXMrOVRpNnZoZHRHeEk0cUZnUFR0Ujh1MVdld1R5SzdMNU1KRmNQZDIrRndNaEIKL3lWM0laZm1TcDd3bDF4eFNVODY2Z1QxY09xTENGUlIvRTFETmFRRG1XYlRqMXJGMkx4SXE4QUdQYnBoQ0dQMwpRRytSRGlQblRZSFA2c2VDZXk1VjljRDBMdlBSaVpYYityU2JXV1NnUFZ0TUhSOG1OUXVDbTZUOW9RSURBUUFCCm96Z3dOakFNQmdOVkhSTUJBZjhFQWpBQU1BNEdBMVVkRHdFQi93UUVBd0lIZ0RBV0JnTlZIU1VCQWY4RUREQUsKQmdnckJnRUZCUWNEQWpBTkJna3Foa2lHOXcwQkFRVUZBQU9DQVFFQVh5L281cUxsU21kVTlKdkUvQXRYb3BEcgpReFZnaXUrSmh0SXlnUkxqVEd6RFJnVGtINEppWUZ1L1hxc21CallFUlFDUWZaMDY2SnZRcUlDaU42UjU5UzZUCkJCTHo1dWRqMU12Q3pRM0xheEprNE5heFhSVVFia0FnOUdkQTR5alF2cXNlZUZ1NjkvVUJZWVp2djZOdmlHZ1MKencvWVJRQXc2QmRPMktneFBPS3hPNmU3TFFPTnREZDE5djhLK015YXZzczVpQ3M3UEhCeTNObEJNbDcrMTVBbgo4RXlmS1VKTUM4eE9YcFJPSWZrSEFzS3RKMFBydkJ2azg5dEwrc1hYNWV0alRrZ0V4eVZBSlpnZnQxdEtSRTd3CllveE8yYlRlOE5mUzNPeDRUaURmSCtxRHMrVHE0WmZ6WDY5SlZTQzNoRzVVK3NjWVRJSzkzNDRSY2VOc3ZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
            "public_key_type": "TYPE_X509_PEM_FILE",
            "service_account_id": "projects/absolute-router-242207/serviceAccounts/spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com",
            "valid_after": "2019-09-24T17:38:21Z",
            "valid_before": "2029-09-21T17:38:21Z"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "google_service_account.spinnaker-store-sa"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_service_networking_connection",
      "name": "private_vpc_connection",
      "provider": "provider.google-beta",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "https%3A%2F%2Fwww.googleapis.com%2Fcompute%2Fv1%2Fprojects%2Fabsolute-router-242207%2Fglobal%2Fnetworks%2Fprivate-network-gke-gevops:servicenetworking.googleapis.com",
            "network": "https://www.googleapis.com/compute/v1/projects/absolute-router-242207/global/networks/private-network-gke-gevops",
            "reserved_peering_ranges": [
              "private-ip-gke-gevops"
            ],
            "service": "servicenetworking.googleapis.com"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "google_compute_global_address.private_ip_address",
            "google_compute_network.private_network"
          ]
        }
      ]
    },
    {
      "module": "module.postgres",
      "mode": "managed",
      "type": "google_sql_database",
      "name": "default",
      "provider": "provider.google",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "managed",
      "type": "google_sql_database_instance",
      "name": "failover_replica",
      "each": "list",
      "provider": "provider.google-beta",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "managed",
      "type": "google_sql_database_instance",
      "name": "master",
      "provider": "provider.google-beta",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "managed",
      "type": "google_sql_database_instance",
      "name": "read_replica",
      "each": "list",
      "provider": "provider.google-beta",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "managed",
      "type": "google_sql_user",
      "name": "default",
      "provider": "provider.google",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "spinnaker-store",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket_policy_only": false,
            "cors": [],
            "encryption": [],
            "force_destroy": true,
            "id": "absolute-router-242207-spinnaker-conf",
            "labels": null,
            "lifecycle_rule": [],
            "location": "EU",
            "logging": [],
            "name": "absolute-router-242207-spinnaker-conf",
            "predefined_acl": null,
            "project": "absolute-router-242207",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/absolute-router-242207-spinnaker-conf",
            "storage_class": "STANDARD",
            "url": "gs://absolute-router-242207-spinnaker-conf",
            "versioning": [],
            "website": []
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_storage_bucket_iam_binding",
      "name": "spinnaker-bucket-iam",
      "provider": "provider.google",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "bucket": "absolute-router-242207-spinnaker-conf",
            "etag": "CAI=",
            "id": "absolute-router-242207-spinnaker-conf/roles/storage.admin",
            "members": [
              "serviceAccount:spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com"
            ],
            "role": "roles/storage.admin"
          },
          "private": "bnVsbA==",
          "depends_on": [
            "google_service_account.spinnaker-store-sa",
            "google_storage_bucket.spinnaker-store"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "istio_chart",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "# Top level istio values file has the following sections.\n#\n# global: This file is the authoritative and exhaustive source for the global section.\n#\n# chart sections: Every subdirectory inside the charts/ directory has a top level\n#       configuration key in this file. This file overrides the values specified\n#       by the charts\n#       Check the chart level values file for exhaustive list of configuration options.\n\n#\n# Gateways Configuration, refer to the charts/gateways/values.yaml\n# for detailed configuration\n#\ngateways:\n  enabled: true\n\n#\n# sidecar-injector webhook configuration, refer to the\n# charts/sidecarInjectorWebhook/values.yaml for detailed configuration\n#\nsidecarInjectorWebhook:\n  enabled: true\n\n#\n# galley configuration, refer to charts/galley/values.yaml\n# for detailed configuration\n#\ngalley:\n  enabled: true\n\n#\n# mixer configuration\n#\n# @see charts/mixer/values.yaml for all values\nmixer:\n  policy:\n    # if policy is enabled the global.disablePolicyChecks has affect.\n    enabled: true\n\n  telemetry:\n    enabled: true\n#\n# pilot configuration\n#\n# @see charts/pilot/values.yaml\npilot:\n  enabled: true\n\n#\n# security configuration\n#\nsecurity:\n  enabled: true\n\n#\n# nodeagent configuration\n#\nnodeagent:\n  enabled: false\n\n#\n# addon grafana configuration\n#\ngrafana:\n  enabled: true\n\n#\n# addon prometheus configuration\n#\nprometheus:\n  enabled: true\n\n#\n# addon jaeger tracing configuration\n#\ntracing:\n  enabled: true\n\n#\n# addon kiali tracing configuration\n#\nkiali:\n  enabled: false\n\n#\n# addon certmanager configuration\n#\ncertmanager:\n  enabled: false\n\n#\n# Istio CNI plugin enabled\n#   This must be enabled to use the CNI plugin in Istio.  The CNI plugin is installed separately.\n#   If true, the privileged initContainer istio-init is not needed to perform the traffic redirect\n#   settings for the istio-proxy.\n#\nistio_cni:\n  enabled: false\n\n# addon Istio CoreDNS configuration\n#\nistiocoredns:\n  enabled: false\n\n# Common settings used among istio subcharts.\nglobal:\n  # Default hub for Istio images.\n  # Releases are published to docker hub under 'istio' project.\n  # Daily builds from prow are on gcr.io\n  hub: gcr.io/istio-release\n\n  # Default tag for Istio images.\n  tag: master-latest-daily\n\n  # Comma-separated minimum per-scope logging level of messages to output, in the form of \u003cscope\u003e:\u003clevel\u003e,\u003cscope\u003e:\u003clevel\u003e\n  # The control plane has different scopes depending on component, but can configure default log level across all components\n  # If empty, default scope and level will be used as configured in code\n  logging:\n    level: \"default:info\"\n\n  # monitoring port used by mixer, pilot, galley and sidecar injector\n  monitoringPort: 15014\n\n  k8sIngress:\n    enabled: false\n    # Gateway used for k8s Ingress resources. By default it is\n    # using 'istio:ingressgateway' that will be installed by setting\n    # 'gateways.enabled' and 'gateways.istio-ingressgateway.enabled'\n    # flags to true.\n    gatewayName: ingressgateway\n    # enableHttps will add port 443 on the ingress.\n    # It REQUIRES that the certificates are installed  in the\n    # expected secrets - enabling this option without certificates\n    # will result in LDS rejection and the ingress will not work.\n    enableHttps: false\n\n  proxy:\n    # Configuration for the proxy init container\n    init:\n      resources:\n        limits:\n          cpu: 100m\n          memory: 50Mi\n        requests:\n          cpu: 10m\n          memory: 10Mi\n    image: proxyv2\n\n    # cluster domain. Default value is \"cluster.local\".\n    clusterDomain: \"cluster.local\"\n\n    # Resources for the sidecar.\n    resources:\n      requests:\n        cpu: 100m\n        memory: 128Mi\n      limits:\n        cpu: 2000m\n        memory: 1024Mi\n\n    # Controls number of Proxy worker threads.\n    # If set to 0, then start worker thread for each CPU thread/core.\n    concurrency: 2\n\n    # Configures the access log for each sidecar.\n    # Options:\n    #   \"\" - disables access log\n    #   \"/dev/stdout\" - enables access log\n    accessLogFile: \"\"\n\n    # Configure how and what fields are displayed in sidecar access log. Setting to\n    # empty string will result in default log format\n    accessLogFormat: \"\"\n\n    # Configure the access log for sidecar to JSON or TEXT.\n    accessLogEncoding: TEXT\n\n    # Configure envoy gRPC access log service.\n    envoyAccessLogService:\n      enabled: false\n      host: # example: accesslog-service.istio-system\n      port: # example: 15000\n      tlsSettings:\n        mode: DISABLE # DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL\n        clientCertificate: # example: /etc/istio/als/cert-chain.pem\n        privateKey:        # example: /etc/istio/als/key.pem\n        caCertificates:    # example: /etc/istio/als/root-cert.pem\n        sni:               # example: als.somedomain\n        subjectAltNames: []\n        # - als.somedomain\n      tcpKeepalive:\n        probes: 3\n        time: 10s\n        interval: 10s\n\n    # Log level for proxy, applies to gateways and sidecars.  If left empty, \"warning\" is used.\n    # Expected values are: trace|debug|info|warning|error|critical|off\n    logLevel: \"\"\n\n    # Per Component log level for proxy, applies to gateways and sidecars. If a component level is\n    # not set, then the global \"logLevel\" will be used. If left empty, \"misc:error\" is used.\n    componentLogLevel: \"\"\n\n    # Configure the DNS refresh rate for Envoy cluster of type STRICT_DNS\n    # This must be given it terms of seconds. For example, 300s is valid but 5m is invalid.\n    dnsRefreshRate: 300s\n\n    # Automatic protocol detection uses a set of heuristics to\n    # determine whether the connection is using TLS or not (on the\n    # server side), as well as the application protocol being used\n    # (e.g., http vs tcp). These heuristics rely on the client sending\n    # the first bits of data. For server first protocols like MySQL,\n    # MongoDB, etc., Envoy will timeout on the protocol detection after\n    # the specified period, defaulting to non mTLS plain TCP\n    # traffic. Set this field to tweak the period that Envoy will wait\n    # for the client to send the first bits of data. (MUST BE \u003e=1ms)\n    protocolDetectionTimeout: 100ms\n\n    #If set to true, istio-proxy container will have privileged securityContext\n    privileged: false\n\n    # If set, newly injected sidecars will have core dumps enabled.\n    enableCoreDump: false\n\n    # Image used to enable core dumps. This is only used, when \"enableCoreDump\" is set to true.\n    enableCoreDumpImage: ubuntu:xenial\n\n    # Default port for Pilot agent health checks. A value of 0 will disable health checking.\n    statusPort: 15020\n\n    # The initial delay for readiness probes in seconds.\n    readinessInitialDelaySeconds: 1\n\n    # The period between readiness probes.\n    readinessPeriodSeconds: 2\n\n    # The number of successive failed probes before indicating readiness failure.\n    readinessFailureThreshold: 30\n\n    # istio egress capture whitelist\n    # https://istio.io/docs/tasks/traffic-management/egress.html#calling-external-services-directly\n    # example: includeIPRanges: \"172.30.0.0/16,172.20.0.0/16\"\n    # would only capture egress traffic on those two IP Ranges, all other outbound traffic would\n    # be allowed by the sidecar\n    includeIPRanges: \"*\"\n    excludeIPRanges: \"\"\n    excludeOutboundPorts: \"\"\n\n    # pod internal interfaces\n    kubevirtInterfaces: \"\"\n\n    # istio ingress capture whitelist\n    # examples:\n    #     Redirect no inbound traffic to Envoy:    --includeInboundPorts=\"\"\n    #     Redirect all inbound traffic to Envoy:   --includeInboundPorts=\"*\"\n    #     Redirect only selected ports:            --includeInboundPorts=\"80,8080\"\n    includeInboundPorts: \"*\"\n    excludeInboundPorts: \"\"\n\n    # This controls the 'policy' in the sidecar injector.\n    autoInject: enabled\n\n    # Sets the destination Statsd in envoy (the value of the \"--statsdUdpAddress\" proxy argument\n    # would be \u003chost\u003e:\u003cport\u003e).\n    # Disabled by default.\n    # The istio-statsd-prom-bridge is deprecated and should not be used moving forward.\n    envoyStatsd:\n      # If enabled is set to true, host and port must also be provided. Istio no longer provides a statsd collector.\n      enabled: false\n      host: # example: statsd-svc.istio-system\n      port: # example: 9125\n\n    # Sets the Envoy Metrics Service address, used to push Envoy metrics to an external collector\n    # via the Metrics Service gRPC API. This contains detailed stats information emitted directly\n    # by Envoy and should not be confused with the the Istio telemetry. The Envoy stats are also\n    # available to scrape via the Envoy admin port at either /stats or /stats/prometheus.\n    #\n    # See https://www.envoyproxy.io/docs/envoy/latest/api-v2/config/metrics/v2/metrics_service.proto\n    # for details about Envoy's Metrics Service API.\n    #\n    # Disabled by default.\n    envoyMetricsService:\n      enabled: false\n      host: # example: metrics-service.istio-system\n      port: # example: 15000\n      tlsSettings:\n        mode: DISABLE # DISABLE, SIMPLE, MUTUAL, ISTIO_MUTUAL\n        clientCertificate: # example: /etc/istio/ms/cert-chain.pem\n        privateKey:        # example: /etc/istio/ms/key.pem\n        caCertificates:    # example: /etc/istio/ms/root-cert.pem\n        sni:               # example: ms.somedomain\n        subjectAltNames: []\n        # - ms.somedomain \n      tcpKeepalive:\n        probes: 3\n        time: 10s\n        interval: 10s\n\n    # Specify which tracer to use. One of: zipkin, lightstep, datadog, stackdriver.\n    # If using stackdriver tracer outside GCP, set env GOOGLE_APPLICATION_CREDENTIALS to the GCP credential file.\n    tracer: \"zipkin\"\n\n  proxy_init:\n    # Base name for the proxy_init container, used to configure iptables.\n    image: proxy_init\n\n  # imagePullPolicy is applied to istio control plane components.\n  # local tests require IfNotPresent, to avoid uploading to dockerhub.\n  # TODO: Switch to Always as default, and override in the local tests.\n  imagePullPolicy: IfNotPresent\n\n  # controlPlaneSecurityEnabled enabled. Will result in delays starting the pods while secrets are\n  # propagated, not recommended for tests.\n  controlPlaneSecurityEnabled: false\n\n  # disablePolicyChecks disables mixer policy checks.\n  # if mixer.policy.enabled==true then disablePolicyChecks has affect.\n  # Will set the value with same name in istio config map - pilot needs to be restarted to take effect.\n  disablePolicyChecks: true\n\n  # policyCheckFailOpen allows traffic in cases when the mixer policy service cannot be reached.\n  # Default is false which means the traffic is denied when the client is unable to connect to Mixer.\n  policyCheckFailOpen: false\n\n  # EnableTracing sets the value with same name in istio config map, requires pilot restart to take effect.\n  enableTracing: true\n\n  # Configuration for each of the supported tracers\n  tracer:\n    # Configuration for envoy to send trace data to LightStep.\n    # Disabled by default.\n    # address: the \u003chost\u003e:\u003cport\u003e of the satellite pool\n    # accessToken: required for sending data to the pool\n    # secure: specifies whether data should be sent with TLS\n    # cacertPath: the path to the file containing the cacert to use when verifying TLS. If secure is true, this is\n    #   required. If a value is specified then a secret called \"lightstep.cacert\" must be created in the destination\n    #   namespace with the key matching the base of the provided cacertPath and the value being the cacert itself.\n    #\n    lightstep:\n      address: \"\"                # example: lightstep-satellite:443\n      accessToken: \"\"            # example: abcdefg1234567\n      secure: true               # example: true|false\n      cacertPath: \"\"             # example: /etc/lightstep/cacert.pem\n    zipkin:\n      # Host:Port for reporting trace data in zipkin format. If not specified, will default to\n      # zipkin service (port 9411) in the same namespace as the other istio components.\n      address: \"\"\n    datadog:\n      # Host:Port for submitting traces to the Datadog agent.\n      address: \"$(HOST_IP):8126\"\n\n  # Default mtls policy. If true, mtls between services will be enabled by default.\n  mtls:\n    # Default setting for service-to-service mtls. Can be set explicitly using\n    # destination rules or service annotations.\n    enabled: false\n    # If set to true, and a given service does not have a corresponding DestinationRule configured,\n    # or its DestinationRule does not have TLSSettings specified, Istio configures client side\n    # TLS configuration automatically, based on the server side mTLS authentication policy and the\n    # availibity of sidecars.\n    auto: false\n\n  # Lists the secrets you need to use to pull Istio images from a private registry.\n  imagePullSecrets: []\n    # - private-registry-key\n\n  # Specify pod scheduling arch(amd64, ppc64le, s390x) and weight as follows:\n  #   0 - Never scheduled\n  #   1 - Least preferred\n  #   2 - No preference\n  #   3 - Most preferred\n  arch:\n    amd64: 2\n    s390x: 2\n    ppc64le: 2\n\n  # Whether to restrict the applications namespace the controller manages;\n  # If not set, controller watches all namespaces\n  oneNamespace: false\n\n  # Default node selector to be applied to all deployments so that all pods can be\n  # constrained to run a particular nodes. Each component can overwrite these default\n  # values by adding its node selector block in the relevant section below and setting\n  # the desired values.\n  defaultNodeSelector: {}\n\n  # Default node tolerations to be applied to all deployments so that all pods can be\n  # scheduled to a particular nodes with matching taints. Each component can overwrite\n  # these default values by adding its tolerations block in the relevant section below\n  # and setting the desired values.\n  # Configure this field in case that all pods of Istio control plane are expected to\n  # be scheduled to particular nodes with specified taints.\n  defaultTolerations: []\n\n  # Whether to perform server-side validation of configuration.\n  configValidation: true\n\n  # Custom DNS config for the pod to resolve names of services in other\n  # clusters. Use this to add additional search domains, and other settings.\n  # see\n  # https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#dns-config\n  # This does not apply to gateway pods as they typically need a different\n  # set of DNS settings than the normal application pods (e.g., in\n  # multicluster scenarios).\n  # NOTE: If using templates, follow the pattern in the commented example below.\n  # podDNSSearchNamespaces:\n  # - global\n  # - \"[[ valueOrDefault .DeploymentMeta.Namespace \\\"default\\\" ]].global\"\n\n  # If set to true, the pilot and citadel mtls will be exposed on the\n  # ingress gateway\n  meshExpansion:\n    enabled: false\n    # If set to true, the pilot and citadel mtls and the plaintext pilot ports\n    # will be exposed on an internal gateway\n    useILB: false\n\n  multiCluster:\n    # Set to true to connect two kubernetes clusters via their respective\n    # ingressgateway services when pods in each cluster cannot directly\n    # talk to one another. All clusters should be using Istio mTLS and must\n    # have a shared root CA for this model to work.\n    enabled: false\n\n    # Should be set to the name of the cluster this installation will run in. This is required for sidecar injection\n    # to properly label proxies\n    clusterName: \"\"\n\n  # A minimal set of requested resources to applied to all deployments so that\n  # Horizontal Pod Autoscaler will be able to function (if set).\n  # Each component can overwrite these default values by adding its own resources\n  # block in the relevant section below and setting the desired resources values.\n  defaultResources:\n    requests:\n      cpu: 10m\n    #   memory: 128Mi\n    # limits:\n    #   cpu: 100m\n    #   memory: 128Mi\n\n  # enable pod distruption budget for the control plane, which is used to\n  # ensure Istio control plane components are gradually upgraded or recovered.\n  defaultPodDisruptionBudget:\n    enabled: true\n    # The values aren't mutable due to a current PodDisruptionBudget limitation\n    # minAvailable: 1\n\n  # Kubernetes \u003e=v1.11.0 will create two PriorityClass, including system-cluster-critical and\n  # system-node-critical, it is better to configure this in order to make sure your Istio pods\n  # will not be killed because of low priority class.\n  # Refer to https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#priorityclass\n  # for more detail.\n  priorityClassName: \"\"\n\n  # Use the Mesh Control Protocol (MCP) for configuring Mixer and\n  # Pilot. Requires galley (`--set galley.enabled=true`).\n  useMCP: true\n\n  # The trust domain corresponds to the trust root of a system\n  # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain\n  # Indicate the domain used in SPIFFE identity URL\n  # The default depends on the environment.\n  #   kubernetes: cluster.local\n  #   else:  default dns domain\n  trustDomain: \"\"\n\n  # Mesh ID means Mesh Identifier. It should be unique within the scope where\n  # meshes will interact with each other, but it is not required to be\n  # globally/universally unique. For example, if any of the following are true,\n  # then two meshes must have different Mesh IDs:\n  # - Meshes will have their telemetry aggregated in one place\n  # - Meshes will be federated together\n  # - Policy will be written referencing one mesh from the other\n  #\n  # If an administrator expects that any of these conditions may become true in\n  # the future, they should ensure their meshes have different Mesh IDs\n  # assigned.\n  #\n  # Within a multicluster mesh, each cluster must be (manually or auto)\n  # configured to have the same Mesh ID value. If an existing cluster 'joins' a\n  # multicluster mesh, it will need to be migrated to the new mesh ID. Details\n  # of migration TBD, and it may be a disruptive operation to change the Mesh\n  # ID post-install.\n  #\n  # If the mesh admin does not specify a value, Istio will use the value of the\n  # mesh's Trust Domain. The best practice is to select a proper Trust Domain\n  # value.\n  meshID: \"\"\n\n  # Set the default behavior of the sidecar for handling outbound traffic from the application:\n  # ALLOW_ANY - outbound traffic to unknown destinations will be allowed, in case there are no\n  #   services or ServiceEntries for the destination port\n  # REGISTRY_ONLY - restrict outbound traffic to services defined in the service registry as well\n  #   as those defined through ServiceEntries\n  # ALLOW_ANY is the default in 1.1.  This means each pod will be able to make outbound requests\n  # to services outside of the mesh without any ServiceEntry.\n  # REGISTRY_ONLY was the default in 1.0.  If this behavior is desired, set the value below to REGISTRY_ONLY.\n  outboundTrafficPolicy:\n    mode: ALLOW_ANY\n\n  # The namespace where globally shared configurations should be present.\n  # DestinationRules that apply to the entire mesh (e.g., enabling mTLS),\n  # default Sidecar configs, etc. should be added to this namespace.\n  # configRootNamespace: istio-config\n\n  # set the default set of namespaces to which services, service entries, virtual services, destination\n  # rules should be exported to. Currently only one value can be provided in this list. This value\n  # should be one of the following two options:\n  # * implies these objects are visible to all namespaces, enabling any sidecar to talk to any other sidecar.\n  # . implies these objects are visible to only to sidecars in the same namespace, or if imported as a Sidecar.egress.host\n  # defaultConfigVisibilitySettings:\n  #- '*'\n\n  sds:\n    # SDS enabled. IF set to true, mTLS certificates for the sidecars will be\n    # distributed through the SecretDiscoveryService instead of using K8S secrets to mount the certificates.\n    enabled: false\n    udsPath: \"\"\n    # The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.\n    # When a CSR is sent from Citadel Agent to the CA (e.g. Citadel), this aud is to make sure the\n    # JWT is intended for the CA.\n    token:\n      aud: istio-ca\n\n  # Configure the mesh networks to be used by the Split Horizon EDS.\n  #\n  # The following example defines two networks with different endpoints association methods.\n  # For `network1` all endpoints that their IP belongs to the provided CIDR range will be\n  # mapped to network1. The gateway for this network example is specified by its public IP\n  # address and port.\n  # The second network, `network2`, in this example is defined differently with all endpoints\n  # retrieved through the specified Multi-Cluster registry being mapped to network2. The\n  # gateway is also defined differently with the name of the gateway service on the remote\n  # cluster. The public IP for the gateway will be determined from that remote service (only\n  # LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,\n  # it still need to be configured manually).\n  #\n  # meshNetworks:\n  #   network1:\n  #     endpoints:\n  #     - fromCidr: \"192.168.0.1/24\"\n  #     gateways:\n  #     - address: 1.1.1.1\n  #       port: 80\n  #   network2:\n  #     endpoints:\n  #     - fromRegistry: reg1\n  #     gateways:\n  #     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local\n  #       port: 443\n  #\n  meshNetworks: {}\n\n  # Specifies the global locality load balancing settings.\n  # Locality-weighted load balancing allows administrators to control the distribution of traffic to\n  # endpoints based on the localities of where the traffic originates and where it will terminate.\n  # Either failover or distribute configuration can be set, but not both. If neither are provided\n  # failover mode will be used.\n  #\n  # localityLbSetting:\n  #   enabled: true\n  #   distribute:\n  #   - from: \"us-central1/*\"\n  #     to:\n  #       \"us-central1/*\": 80\n  #       \"us-central2/*\": 20\n  #\n  # localityLbSetting:\n  #   enabled: true\n  #   failover:\n  #   - from: us-east\n  #     to: eu-west\n  #   - from: us-west\n  #     to: us-east\n  localityLbSetting:\n    enabled: true\n\n  # Specifies whether helm test is enabled or not.\n  # This field is set to false by default, so 'helm template ...'\n  # will ignore the helm test yaml files when generating the template\n  enableHelmTest: false\n",
            "content_base64": null,
            "filename": "istio-values.yaml",
            "id": "ec71462bd3dec6ab93c85c9f7a389e0f99fd4043",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.istio_chart"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "provider": "provider.local",
      "instances": []
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "spinnaker_chart",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "gcs:\n  enabled: true\n  bucket: absolute-router-242207-spinnaker-conf\n  project: absolute-router-242207\n  jsonKey: '{\n  \"type\": \"service_account\",\n  \"project_id\": \"absolute-router-242207\",\n  \"private_key_id\": \"b7a8746e1a2f8bcdae77331dfecd27132a8b7d82\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCWI+foiTZG/GSW\\nUbzcrj7pIxfpHJZLctLDK9WQmOZ19Wq/ZP7PFh8Vc6CqJCGpUZn8SGxjEyC9uEgu\\n6Hooc6U0ij9fr+okFiJWBcrq+eZLbPT4wpa09Gj1ixyCjEJjX75kMTxqjFUzeXgJ\\nNG/jM9x2zOWhrOkL2wWJzrfTDV5tEiLa6z71OLq+F20bEjioWA9O1Hy7VZ7BPIrs\\nvkwkVw93b4XAyEH/JXchl+ZKnvCXXHFJTzrqBPVw6osIVFH8TUM1pAOZZtOPWsXY\\nvEirwAY9umEIY/dAb5EOI+dNgc/qx4J7LlX1wPQu89GJldv6tJtZZKA9W0wdHyY1\\nC4KbpP2hAgMBAAECggEABM4OXcPL/bi35JOD9F4L3dZjT3lvkYErUvkVDclf942V\\nJFmn2uLWUVxVDrvQjW83JZiZfYfyNsvdB4WuZHkWuU+gy6ZSFyAG4gQWLPQUXeum\\nUAffRQt2kR3uO78w6JVQMjuHrvM/o/1ywGuYa+GDPiWraFTOdjzV3wn/IqWucsTn\\nBpI3DtzI+9U24UReILX7B9SHl4y7uVkWhCBrL0OnHlRFLEfxnVVnWsbVIpj8YigY\\nqJdSpy15LNc/MaIbj1+omQp0EQ2ocSov3iLNWtpw4sIyFRpujUcA5weLFPvnwKaS\\nbY1wlSZEOkBqjvEhyvniM4bmdg/bPvdlchxS/vR3xwKBgQDL/T07hNOLCXkCTmL2\\nNr/aLAmWEbJTUztYvZN6yORMTy2l4Kk8PCx5USNtSObAMuWWa5pO669YWmHjjDX3\\nHTcLZTRWjsNSQKH2JKdqb0VJScIqrHeln5GBYrmvcoDsOK23EdLXkFX2MK4zKLB+\\nNRaIDp+X2klB3eu1yYsb6Y50uwKBgQC8a9f5LT3uVU/utKQ7+i8zQkvmtsfI9ddj\\nMVgBnOILZ81QJ36WD6Wo8ypsPnHbiWbFGst8JdVLwlkMJfplxgKAQ4OkyRpUNmZ/\\n7X9DUVkHcvLXQoiJuqbHlRCKeRxPtcWOlDphFVBDqWEkOFIwVTisJ+8l8iT9ljHM\\nSsDIIw+fUwKBgArxnyNeUOsYqwFQq0aCUXCnBCyk7mhCAuET6qGfvX/Kj6xijTHK\\nGKi5jakDTD3rfR3A0BqD0nhvAOlwUETdsGJQH6q1Jg13ojjOZpzzM0hnSJ95eUHN\\necTzQvsCrZ/+unMj5afi+nmmyvG7sRxURM0v26gN8fgyq76o/WmV8iqZAoGAZ3MW\\nevp5/Dbe0gJgAYYVECGgJqXH/u/rN8zJsuj9uqFdOlrUx3MD00Tez9thC9XelO1n\\nN1xWRWgJGABqACK9EMsApiK7z+ymTiqJKt6o8MwNxF4FNQlDtGSFVmG0R5dXRjbf\\n7pmTHfMLIKXDikHgAbVTOhQ+dvRVlwKb4cZON30CgYBzy2TgfhfXzCBeh95d+bw9\\nyZzv+5PJReIzncEMljpi0+qhytm3VuTM17TDFM/1Zdu1+XWCrVFY1oQn2EnLQmpp\\nsiAMKVI5mpc5fUUfv+6FI/YHqkRoRbZ4KrGetULULxS+dDYzZROBjhL1b62FR2Ep\\nIkN+kM9/5inuZbG5mF9dGg==\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com\",\n  \"client_id\": \"115693903076542695726\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/spinnaker-store-sa-id%40absolute-router-242207.iam.gserviceaccount.com\"\n}\n'\n\ndockerRegistries:\n- name: gcr\n  address: https://gcr.io\n  username: _json_key\n  password: '{\n  \"type\": \"service_account\",\n  \"project_id\": \"absolute-router-242207\",\n  \"private_key_id\": \"b7a8746e1a2f8bcdae77331dfecd27132a8b7d82\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCWI+foiTZG/GSW\\nUbzcrj7pIxfpHJZLctLDK9WQmOZ19Wq/ZP7PFh8Vc6CqJCGpUZn8SGxjEyC9uEgu\\n6Hooc6U0ij9fr+okFiJWBcrq+eZLbPT4wpa09Gj1ixyCjEJjX75kMTxqjFUzeXgJ\\nNG/jM9x2zOWhrOkL2wWJzrfTDV5tEiLa6z71OLq+F20bEjioWA9O1Hy7VZ7BPIrs\\nvkwkVw93b4XAyEH/JXchl+ZKnvCXXHFJTzrqBPVw6osIVFH8TUM1pAOZZtOPWsXY\\nvEirwAY9umEIY/dAb5EOI+dNgc/qx4J7LlX1wPQu89GJldv6tJtZZKA9W0wdHyY1\\nC4KbpP2hAgMBAAECggEABM4OXcPL/bi35JOD9F4L3dZjT3lvkYErUvkVDclf942V\\nJFmn2uLWUVxVDrvQjW83JZiZfYfyNsvdB4WuZHkWuU+gy6ZSFyAG4gQWLPQUXeum\\nUAffRQt2kR3uO78w6JVQMjuHrvM/o/1ywGuYa+GDPiWraFTOdjzV3wn/IqWucsTn\\nBpI3DtzI+9U24UReILX7B9SHl4y7uVkWhCBrL0OnHlRFLEfxnVVnWsbVIpj8YigY\\nqJdSpy15LNc/MaIbj1+omQp0EQ2ocSov3iLNWtpw4sIyFRpujUcA5weLFPvnwKaS\\nbY1wlSZEOkBqjvEhyvniM4bmdg/bPvdlchxS/vR3xwKBgQDL/T07hNOLCXkCTmL2\\nNr/aLAmWEbJTUztYvZN6yORMTy2l4Kk8PCx5USNtSObAMuWWa5pO669YWmHjjDX3\\nHTcLZTRWjsNSQKH2JKdqb0VJScIqrHeln5GBYrmvcoDsOK23EdLXkFX2MK4zKLB+\\nNRaIDp+X2klB3eu1yYsb6Y50uwKBgQC8a9f5LT3uVU/utKQ7+i8zQkvmtsfI9ddj\\nMVgBnOILZ81QJ36WD6Wo8ypsPnHbiWbFGst8JdVLwlkMJfplxgKAQ4OkyRpUNmZ/\\n7X9DUVkHcvLXQoiJuqbHlRCKeRxPtcWOlDphFVBDqWEkOFIwVTisJ+8l8iT9ljHM\\nSsDIIw+fUwKBgArxnyNeUOsYqwFQq0aCUXCnBCyk7mhCAuET6qGfvX/Kj6xijTHK\\nGKi5jakDTD3rfR3A0BqD0nhvAOlwUETdsGJQH6q1Jg13ojjOZpzzM0hnSJ95eUHN\\necTzQvsCrZ/+unMj5afi+nmmyvG7sRxURM0v26gN8fgyq76o/WmV8iqZAoGAZ3MW\\nevp5/Dbe0gJgAYYVECGgJqXH/u/rN8zJsuj9uqFdOlrUx3MD00Tez9thC9XelO1n\\nN1xWRWgJGABqACK9EMsApiK7z+ymTiqJKt6o8MwNxF4FNQlDtGSFVmG0R5dXRjbf\\n7pmTHfMLIKXDikHgAbVTOhQ+dvRVlwKb4cZON30CgYBzy2TgfhfXzCBeh95d+bw9\\nyZzv+5PJReIzncEMljpi0+qhytm3VuTM17TDFM/1Zdu1+XWCrVFY1oQn2EnLQmpp\\nsiAMKVI5mpc5fUUfv+6FI/YHqkRoRbZ4KrGetULULxS+dDYzZROBjhL1b62FR2Ep\\nIkN+kM9/5inuZbG5mF9dGg==\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"spinnaker-store-sa-id@absolute-router-242207.iam.gserviceaccount.com\",\n  \"client_id\": \"115693903076542695726\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/spinnaker-store-sa-id%40absolute-router-242207.iam.gserviceaccount.com\"\n}\n'\n  email: 1234@5678.com\n\n# Disable minio as the default storage backend\nminio:\n  enabled: false\n\njenkins:\n  enabled: false\n\n# Configure Spinnaker to enable GCP services\nhalyard:\n  spinnakerVersion: 1.16.0\n  image:\n    tag: 1.23.2\n    #tag: 1.16.0\n  additionalScripts:\n    create: true\n    data:\n      enable_gcs_artifacts.sh: |-\n        $HAL_COMMAND config artifact gcs account add gcs-absolute-router-242207 --json-path /opt/gcs/key.json\n        $HAL_COMMAND config artifact gcs enable\n      enable_pubsub_triggers.sh: |-\n        $HAL_COMMAND config pubsub google enable\n        $HAL_COMMAND config pubsub google subscription add spinnaker-subscription --subscription-name spinnaker-subscription --json-path /opt/gcs/key.json --project absolute-router-242207 --message-format GCB\n\nkubeConfig:\n  enabled: true\n  secretName: spin-kubeconfig\n  secretKey: spinnaker-kubeconfig\n  contexts:\n  - core\n  deploymentContext: core\n\n#serviceAccount:\n#  create: false\n#  create: true\n#  halyardName:\n#  spinnakerName:\n\n",
            "content_base64": null,
            "filename": "spinnaker-chart.yaml",
            "id": "69c45ee27d59431b96a4ef080a1d1bb40fe50a79",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.spinnaker_chart"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "spinnaker_install_sh",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/bash\n\nCORE_CLUSTER=gke-gevops\nCORE_USER=core-spinnaker-service-account\nKUBECONFIG_FILE=spinnaker-kubeconfig\nSPINNAKER_SA=create-spinnaker-sa.yaml\n\nkubectl --kubeconfig=kubeconfig apply -f $SPINNAKER_SA\nCORE_TOKEN=$(kubectl  --kubeconfig=kubeconfig  get secret \\\n    $(kubectl --kubeconfig=kubeconfig get serviceaccount spinnaker-service-account \\\n    -n spinnaker \\\n    -o jsonpath='{.secrets[0].name}') \\\n    -n spinnaker \\\n    -o jsonpath='{.data.token}' | base64 --decode)\n\nkubectl --kubeconfig=kubeconfig config view --raw -o json | jq -r '.clusters[] | select(.name == \"'gke-gevops'\") | .cluster.\"certificate-authority-data\"' | base64 -d \u003e core_cluster_ca.crt\nCORE_SERVER=$(kubectl --kubeconfig=kubeconfig config view --raw -o json | jq -r '.clusters[] | select(.name == \"'gke-gevops'\") | .cluster.\"server\"')\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-cluster $CORE_CLUSTER \\\n    --certificate-authority=./core_cluster_ca.crt \\\n    --embed-certs=true \\\n    --server $CORE_SERVER\n\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-credentials $CORE_USER --token $CORE_TOKEN\nkubectl config --kubeconfig=$KUBECONFIG_FILE set-context core --user $CORE_USER --cluster $CORE_CLUSTER\nkubectl --kubeconfig=kubeconfig create secret generic --from-file=./spinnaker-kubeconfig spin-kubeconfig -n spinnaker",
            "content_base64": null,
            "filename": "create-spin-kub-file.sh",
            "id": "dcf801cdf8787c2c8542a8c0a4195d3f40e359f9",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.spinnaker_install_sh"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "template_pipeline_spin_cfgmanapp",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "{\n \"application\": \"cfgmanapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"447fdcdf-91fc-47be-afac-6a0215d49855\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"fluffy-mouse-5\",\n   \"id\": \"438cbba3-354f-46b9-9205-bfbf7eeef2b5\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"10cb1c99-1df7-4cca-bcdd-ff6b180698df\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/confman/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"097364cb-6b54-481b-8ddd-c90042c7c3dd\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"cfgmanapp-build\",\n \"parameterConfig\": [],\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"438cbba3-354f-46b9-9205-bfbf7eeef2b5\",\n   \"moniker\": {\n    \"app\": \"cfgmanapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_cfgmanapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568314566748\"\n}\n",
            "content_base64": null,
            "filename": "pipeline_spin_confmanapp.json",
            "id": "ce584a6eb4f1a1d4a2c538dc6f56b8c2c35a4de2",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.template_pipeline_spin_cfgmanapp"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "template_pipeline_spin_frontendapp",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "{\n \"application\": \"frontendapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"2551d0f3-9b4b-4a2f-a4d3-e4285f2c3f86\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"old-dingo-40\",\n   \"id\": \"c7f3ee1d-e510-4086-a356-5a73748db20d\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"2c4d7898-9e38-43b1-8c88-95e22be2e091\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/frontendapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"84ba9989-b686-46b8-afca-8cd2563ef23b\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"frontendapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"c7f3ee1d-e510-4086-a356-5a73748db20d\",\n   \"moniker\": {\n    \"app\": \"frontendapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_frontendapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568317176787\"\n}\n",
            "content_base64": null,
            "filename": "pipeline_spin_frontendapp.json",
            "id": "a40b2e7e49134da7b23501ec7ff0c4b3cad54bcb",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.template_pipeline_spin_frontendapp"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "template_pipeline_spin_logicapp",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "{\n \"application\": \"logicapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"8dce9c56-3d8e-4577-bc92-e415a5ac2cbc\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"itchy-chipmunk-31\",\n   \"id\": \"d61aa3a9-deac-4ce9-b918-103f7117155f\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"2bc4391a-ddef-48d8-916a-60a28d08a1c7\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/logicapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"f6497fb1-a383-4ed9-bfbb-2a83fd0bc55f\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"logicapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"d61aa3a9-deac-4ce9-b918-103f7117155f\",\n   \"moniker\": {\n    \"app\": \"logicapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_logicapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568316829743\"\n}\n",
            "content_base64": null,
            "filename": "pipeline_spin_logicapp.json",
            "id": "628b7d1ae55b6a329c22041fc0ac1937ea29dbbb",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.template_pipeline_spin_logicapp"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "template_pipeline_spin_queryapp",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "{\n \"application\": \"queryapp\",\n \"expectedArtifacts\": [\n  {\n   \"defaultArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"17318591-1d72-44cd-9f94-d17486d8b8d4\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"reference\": \"gs://absolute-router-242207-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"displayName\": \"lazy-vampirebat-91\",\n   \"id\": \"5d09be1d-7b4d-4dff-a05f-55d31caf4cfa\",\n   \"matchArtifact\": {\n    \"artifactAccount\": \"gcs-absolute-router-242207\",\n    \"id\": \"3d006036-bbe7-47e9-a0d7-fa2ca7562352\",\n    \"name\": \"gs://absolute-router-242207-spinnaker-conf/queryapp/ready_kub_dev.yaml\",\n    \"type\": \"gcs/object\"\n   },\n   \"useDefaultArtifact\": true,\n   \"usePriorArtifact\": false\n  }\n ],\n \"id\": \"360ee9eb-7c93-4deb-b7e4-168cc75887dc\",\n \"index\": 0,\n \"keepWaitingPipelines\": false,\n \"lastModifiedBy\": \"anonymous\",\n \"limitConcurrent\": true,\n \"name\": \"queryapp-build\",\n \"stages\": [\n  {\n   \"account\": \"core\",\n   \"cloudProvider\": \"kubernetes\",\n   \"manifestArtifactAccount\": \"gcs-absolute-router-242207\",\n   \"manifestArtifactId\": \"5d09be1d-7b4d-4dff-a05f-55d31caf4cfa\",\n   \"moniker\": {\n    \"app\": \"queryapp\"\n   },\n   \"name\": \"Deploy (Manifest)\",\n   \"refId\": \"1\",\n   \"requisiteStageRefIds\": [],\n   \"skipExpressionEvaluation\": false,\n   \"source\": \"artifact\",\n   \"trafficManagement\": {\n    \"enabled\": false,\n    \"options\": {\n     \"enableTraffic\": false,\n     \"services\": []\n    }\n   },\n   \"type\": \"deployManifest\"\n  }\n ],\n \"triggers\": [\n  {\n   \"enabled\": true,\n   \"payloadConstraints\": {\n    \"source\": \"github_kv-053-devops_queryapp\",\n    \"status\": \"SUCCESS\"\n   },\n   \"pubsubSystem\": \"google\",\n   \"subscriptionName\": \"spinnaker-subscription\",\n   \"type\": \"pubsub\"\n  }\n ],\n \"updateTs\": \"1568317019876\"\n}\n",
            "content_base64": null,
            "filename": "pipeline_spin_queryapp.json",
            "id": "df4cb4df4d575d063fb196b5fecc4b0d4d48d859",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.template_file.template_pipeline_spin_queryapp"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "null_resource",
      "name": "configure_tiller_spinnaker",
      "provider": "provider.null",
      "instances": []
    },
    {
      "module": "module.postgres",
      "mode": "managed",
      "type": "null_resource",
      "name": "dependency_getter",
      "provider": "provider.null",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "5499756118170653244",
            "triggers": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "name",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64": "XMw",
            "b64_std": "XMw=",
            "b64_url": "XMw",
            "byte_length": 2,
            "dec": "23756",
            "hex": "5ccc",
            "id": "XMw",
            "keepers": null,
            "prefix": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "password",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64": "M4Fx0WVRIPiMtQi4kGj-nQ",
            "b64_std": "M4Fx0WVRIPiMtQi4kGj+nQ==",
            "b64_url": "M4Fx0WVRIPiMtQi4kGj-nQ",
            "byte_length": 16,
            "dec": "68462742582108945086182695928701976221",
            "hex": "338171d1655120f88cb508b89068fe9d",
            "id": "M4Fx0WVRIPiMtQi4kGj-nQ",
            "keepers": null,
            "prefix": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "password_database",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64": "24I93-r6CHzer8HyvZMIhQ",
            "b64_std": "24I93+r6CHzer8HyvZMIhQ==",
            "b64_url": "24I93-r6CHzer8HyvZMIhQ",
            "byte_length": 16,
            "dec": "291777184636093931025958643584896010373",
            "hex": "db823ddfeafa087cdeafc1f2bd930885",
            "id": "24I93-r6CHzer8HyvZMIhQ",
            "keepers": null,
            "prefix": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "random_id",
      "name": "username",
      "provider": "provider.random",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "b64": "m2S5Lsx8tYF9XcPUs3Y",
            "b64_std": "m2S5Lsx8tYF9XcPUs3Y=",
            "b64_url": "m2S5Lsx8tYF9XcPUs3Y",
            "byte_length": 14,
            "dec": "3151753616120503238225016604898166",
            "hex": "9b64b92ecc7cb5817d5dc3d4b376",
            "id": "m2S5Lsx8tYF9XcPUs3Y",
            "keepers": null,
            "prefix": null
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
